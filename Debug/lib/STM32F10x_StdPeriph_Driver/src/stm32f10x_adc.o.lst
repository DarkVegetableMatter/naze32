   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	ADC_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	ADC_DeInit:
  24              	.LFB29:
  25              		.file 1 "../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c"
   1:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
   2:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
   3:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @file    stm32f10x_adc.c
   4:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @author  MCD Application Team
   5:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @version V3.5.0
   6:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @date    11-March-2011
   7:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief   This file provides all the ADC firmware functions.
   8:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
   9:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @attention
  10:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  11:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *
  18:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ******************************************************************************
  20:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  21:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  22:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* Includes ------------------------------------------------------------------*/
  23:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #include "stm32f10x_adc.h"
  24:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #include "stm32f10x_rcc.h"
  25:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  26:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  28:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  29:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  30:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC 
  31:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief ADC driver modules
  32:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  33:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  34:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  35:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_TypesDefinitions
  36:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  37:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  38:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  39:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
  40:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
  41:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  42:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  43:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Defines
  44:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
  45:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
  46:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  47:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DISCNUM mask */
  48:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCNUM_Reset           ((uint32_t)0xFFFF1FFF)
  49:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  50:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DISCEN mask */
  51:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Set              ((uint32_t)0x00000800)
  52:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_DISCEN_Reset            ((uint32_t)0xFFFFF7FF)
  53:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  54:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JAUTO mask */
  55:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Set               ((uint32_t)0x00000400)
  56:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JAUTO_Reset             ((uint32_t)0xFFFFFBFF)
  57:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  58:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JDISCEN mask */
  59:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Set             ((uint32_t)0x00001000)
  60:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_JDISCEN_Reset           ((uint32_t)0xFFFFEFFF)
  61:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  62:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC AWDCH mask */
  63:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_AWDCH_Reset             ((uint32_t)0xFFFFFFE0)
  64:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  65:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC Analog watchdog enable mode mask */
  66:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_AWDMode_Reset           ((uint32_t)0xFF3FFDFF)
  67:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  68:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* CR1 register Mask */
  69:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR1_CLEAR_Mask              ((uint32_t)0xFFF0FEFF)
  70:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  71:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC ADON mask */
  72:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_ADON_Set                ((uint32_t)0x00000001)
  73:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_ADON_Reset              ((uint32_t)0xFFFFFFFE)
  74:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  75:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC DMA mask */
  76:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_DMA_Set                 ((uint32_t)0x00000100)
  77:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_DMA_Reset               ((uint32_t)0xFFFFFEFF)
  78:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  79:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC RSTCAL mask */
  80:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_RSTCAL_Set              ((uint32_t)0x00000008)
  81:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  82:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC CAL mask */
  83:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_CAL_Set                 ((uint32_t)0x00000004)
  84:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  85:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SWSTART mask */
  86:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_SWSTART_Set             ((uint32_t)0x00400000)
  87:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  88:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC EXTTRIG mask */
  89:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Set             ((uint32_t)0x00100000)
  90:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_Reset           ((uint32_t)0xFFEFFFFF)
  91:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  92:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC Software start mask */
  93:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Set     ((uint32_t)0x00500000)
  94:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_EXTTRIG_SWSTART_Reset   ((uint32_t)0xFFAFFFFF)
  95:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  96:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JEXTSEL mask */
  97:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTSEL_Reset           ((uint32_t)0xFFFF8FFF)
  98:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
  99:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JEXTTRIG mask */
 100:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Set            ((uint32_t)0x00008000)
 101:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_Reset          ((uint32_t)0xFFFF7FFF)
 102:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 103:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JSWSTART mask */
 104:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JSWSTART_Set            ((uint32_t)0x00200000)
 105:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 106:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC injected software start mask */
 107:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Set   ((uint32_t)0x00208000)
 108:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_JEXTTRIG_JSWSTART_Reset ((uint32_t)0xFFDF7FFF)
 109:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 110:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC TSPD mask */
 111:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Set             ((uint32_t)0x00800000)
 112:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_TSVREFE_Reset           ((uint32_t)0xFF7FFFFF)
 113:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 114:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* CR2 register Mask */
 115:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define CR2_CLEAR_Mask              ((uint32_t)0xFFF1F7FD)
 116:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 117:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SQx mask */
 118:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR3_SQ_Set                 ((uint32_t)0x0000001F)
 119:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR2_SQ_Set                 ((uint32_t)0x0000001F)
 120:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR1_SQ_Set                 ((uint32_t)0x0000001F)
 121:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 122:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* SQR1 register Mask */
 123:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SQR1_CLEAR_Mask             ((uint32_t)0xFF0FFFFF)
 124:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 125:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JSQx mask */
 126:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JSQ_Set                ((uint32_t)0x0000001F)
 127:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 128:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JL mask */
 129:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JL_Set                 ((uint32_t)0x00300000)
 130:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JSQR_JL_Reset               ((uint32_t)0xFFCFFFFF)
 131:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 132:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC SMPx mask */
 133:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SMPR1_SMP_Set               ((uint32_t)0x00000007)
 134:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define SMPR2_SMP_Set               ((uint32_t)0x00000007)
 135:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 136:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC JDRx registers offset */
 137:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define JDR_Offset                  ((uint8_t)0x28)
 138:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 139:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /* ADC1 DR register base address */
 140:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** #define DR_ADDRESS                  ((uint32_t)0x4001244C)
 141:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 142:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 143:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 144:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 145:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 146:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Macros
 147:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 148:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 149:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 150:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 151:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 152:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 153:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 154:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Variables
 155:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 156:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 157:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 158:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 159:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 160:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 161:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 162:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_FunctionPrototypes
 163:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 164:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 165:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 166:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 167:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @}
 168:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 169:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 170:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /** @defgroup ADC_Private_Functions
 171:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @{
 172:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 173:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 174:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 175:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values.
 176:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 177:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 178:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 179:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DeInit(ADC_TypeDef* ADCx)
 180:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
  26              		.loc 1 180 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
 181:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 182:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 183:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
 184:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADCx == ADC1)
  42              		.loc 1 184 0
  43 0008 7A68     		ldr	r2, [r7, #4]
  44 000a 1A4B     		ldr	r3, .L5
  45 000c 9A42     		cmp	r2, r3
  46 000e 0CD1     		bne	.L2
 185:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 186:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable ADC1 reset state */
 187:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, ENABLE);
  47              		.loc 1 187 0
  48 0010 4FF40070 		mov	r0, #512
  49 0014 4FF00101 		mov	r1, #1
  50 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 188:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Release ADC1 from reset state */
 189:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
  51              		.loc 1 189 0
  52 001c 4FF40070 		mov	r0, #512
  53 0020 4FF00001 		mov	r1, #0
  54 0024 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  55 0028 20E0     		b	.L1
  56              	.L2:
 190:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 191:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else if (ADCx == ADC2)
  57              		.loc 1 191 0
  58 002a 7A68     		ldr	r2, [r7, #4]
  59 002c 124B     		ldr	r3, .L5+4
  60 002e 9A42     		cmp	r2, r3
  61 0030 0CD1     		bne	.L4
 192:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 193:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable ADC2 reset state */
 194:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, ENABLE);
  62              		.loc 1 194 0
  63 0032 4FF48060 		mov	r0, #1024
  64 0036 4FF00101 		mov	r1, #1
  65 003a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 195:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Release ADC2 from reset state */
 196:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC2, DISABLE);
  66              		.loc 1 196 0
  67 003e 4FF48060 		mov	r0, #1024
  68 0042 4FF00001 		mov	r1, #0
  69 0046 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  70 004a 0FE0     		b	.L1
  71              	.L4:
 197:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 198:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 199:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 200:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     if (ADCx == ADC3)
  72              		.loc 1 200 0
  73 004c 7A68     		ldr	r2, [r7, #4]
  74 004e 0B4B     		ldr	r3, .L5+8
  75 0050 9A42     		cmp	r2, r3
  76 0052 0BD1     		bne	.L1
 201:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     {
 202:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       /* Enable ADC3 reset state */
 203:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, ENABLE);
  77              		.loc 1 203 0
  78 0054 4FF40040 		mov	r0, #32768
  79 0058 4FF00101 		mov	r1, #1
  80 005c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 204:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       /* Release ADC3 from reset state */
 205:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC3, DISABLE);
  81              		.loc 1 205 0
  82 0060 4FF40040 		mov	r0, #32768
  83 0064 4FF00001 		mov	r1, #0
  84 0068 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  85              	.L1:
 206:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     }
 207:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 208:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
  86              		.loc 1 208 0
  87 006c 07F10807 		add	r7, r7, #8
  88 0070 BD46     		mov	sp, r7
  89 0072 80BD     		pop	{r7, pc}
  90              	.L6:
  91              		.align	2
  92              	.L5:
  93 0074 00240140 		.word	1073816576
  94 0078 00280140 		.word	1073817600
  95 007c 003C0140 		.word	1073822720
  96              		.cfi_endproc
  97              	.LFE29:
  99              		.align	2
 100              		.global	ADC_Init
 101              		.thumb
 102              		.thumb_func
 104              	ADC_Init:
 105              	.LFB30:
 209:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 210:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 211:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters
 212:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         in the ADC_InitStruct.
 213:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 214:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 215:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         the configuration information for the specified ADC peripheral.
 216:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 217:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 218:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 219:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 106              		.loc 1 219 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 16
 109              		@ frame_needed = 1, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 111 0080 80B4     		push	{r7}
 112              	.LCFI3:
 113              		.cfi_def_cfa_offset 4
 114              		.cfi_offset 7, -4
 115 0082 85B0     		sub	sp, sp, #20
 116              	.LCFI4:
 117              		.cfi_def_cfa_offset 24
 118 0084 00AF     		add	r7, sp, #0
 119              	.LCFI5:
 120              		.cfi_def_cfa_register 7
 121 0086 7860     		str	r0, [r7, #4]
 122 0088 3960     		str	r1, [r7, #0]
 220:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 123              		.loc 1 220 0
 124 008a 4FF00003 		mov	r3, #0
 125 008e FB60     		str	r3, [r7, #12]
 221:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t tmpreg2 = 0;
 126              		.loc 1 221 0
 127 0090 4FF00003 		mov	r3, #0
 128 0094 FB72     		strb	r3, [r7, #11]
 222:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 223:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 224:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_MODE(ADC_InitStruct->ADC_Mode));
 225:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 226:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode));
 227:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));   
 228:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 229:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfChannel));
 230:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 231:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 232:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx CR1 value */
 233:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 129              		.loc 1 233 0
 130 0096 7B68     		ldr	r3, [r7, #4]
 131 0098 5B68     		ldr	r3, [r3, #4]
 132 009a FB60     		str	r3, [r7, #12]
 234:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear DUALMOD and SCAN bits */
 235:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_CLEAR_Mask;
 133              		.loc 1 235 0
 134 009c FB68     		ldr	r3, [r7, #12]
 135 009e 23F47023 		bic	r3, r3, #983040
 136 00a2 23F48073 		bic	r3, r3, #256
 137 00a6 FB60     		str	r3, [r7, #12]
 236:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: Dual mode and scan conversion mode */
 237:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set DUALMOD bits according to ADC_Mode value */
 238:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 239:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_Mode | ((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8
 138              		.loc 1 239 0
 139 00a8 3B68     		ldr	r3, [r7, #0]
 140 00aa 1A68     		ldr	r2, [r3, #0]
 141 00ac 3B68     		ldr	r3, [r7, #0]
 142 00ae 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 143 00b0 4FEA0323 		lsl	r3, r3, #8
 144 00b4 1343     		orrs	r3, r3, r2
 145 00b6 FA68     		ldr	r2, [r7, #12]
 146 00b8 1343     		orrs	r3, r3, r2
 147 00ba FB60     		str	r3, [r7, #12]
 240:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx CR1 */
 241:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 148              		.loc 1 241 0
 149 00bc 7B68     		ldr	r3, [r7, #4]
 150 00be FA68     		ldr	r2, [r7, #12]
 151 00c0 5A60     		str	r2, [r3, #4]
 242:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 243:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 244:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx CR2 value */
 245:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR2;
 152              		.loc 1 245 0
 153 00c2 7B68     		ldr	r3, [r7, #4]
 154 00c4 9B68     		ldr	r3, [r3, #8]
 155 00c6 FB60     		str	r3, [r7, #12]
 246:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear CONT, ALIGN and EXTSEL bits */
 247:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR2_CLEAR_Mask;
 156              		.loc 1 247 0
 157 00c8 FA68     		ldr	r2, [r7, #12]
 158 00ca 184B     		ldr	r3, .L8
 159 00cc 1340     		ands	r3, r3, r2
 160 00ce FB60     		str	r3, [r7, #12]
 248:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: external trigger event and continuous conversion mode */
 249:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 250:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 251:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 252:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 161              		.loc 1 252 0
 162 00d0 3B68     		ldr	r3, [r7, #0]
 163 00d2 DA68     		ldr	r2, [r3, #12]
 164 00d4 3B68     		ldr	r3, [r7, #0]
 165 00d6 9B68     		ldr	r3, [r3, #8]
 166 00d8 1A43     		orrs	r2, r2, r3
 253:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****             ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 167              		.loc 1 253 0
 168 00da 3B68     		ldr	r3, [r7, #0]
 169 00dc 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 170 00de 4FEA4303 		lsl	r3, r3, #1
 252:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ExternalTrigConv |
 171              		.loc 1 252 0
 172 00e2 1343     		orrs	r3, r3, r2
 173 00e4 FA68     		ldr	r2, [r7, #12]
 174 00e6 1343     		orrs	r3, r3, r2
 175 00e8 FB60     		str	r3, [r7, #12]
 254:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx CR2 */
 255:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg1;
 176              		.loc 1 255 0
 177 00ea 7B68     		ldr	r3, [r7, #4]
 178 00ec FA68     		ldr	r2, [r7, #12]
 179 00ee 9A60     		str	r2, [r3, #8]
 256:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 257:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 258:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADCx SQR1 value */
 259:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->SQR1;
 180              		.loc 1 259 0
 181 00f0 7B68     		ldr	r3, [r7, #4]
 182 00f2 DB6A     		ldr	r3, [r3, #44]
 183 00f4 FB60     		str	r3, [r7, #12]
 260:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear L bits */
 261:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= SQR1_CLEAR_Mask;
 184              		.loc 1 261 0
 185 00f6 FB68     		ldr	r3, [r7, #12]
 186 00f8 23F47003 		bic	r3, r3, #15728640
 187 00fc FB60     		str	r3, [r7, #12]
 262:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Configure ADCx: regular channel sequence length */
 263:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set L bits according to ADC_NbrOfChannel value */
 264:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 |= (uint8_t) (ADC_InitStruct->ADC_NbrOfChannel - (uint8_t)1);
 188              		.loc 1 264 0
 189 00fe 3B68     		ldr	r3, [r7, #0]
 190 0100 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 191 0102 03F1FF33 		add	r3, r3, #-1
 192 0106 DAB2     		uxtb	r2, r3
 193 0108 FB7A     		ldrb	r3, [r7, #11]
 194 010a 1343     		orrs	r3, r3, r2
 195 010c FB72     		strb	r3, [r7, #11]
 265:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= (uint32_t)tmpreg2 << 20;
 196              		.loc 1 265 0
 197 010e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 198 0110 4FEA0353 		lsl	r3, r3, #20
 199 0114 FA68     		ldr	r2, [r7, #12]
 200 0116 1343     		orrs	r3, r3, r2
 201 0118 FB60     		str	r3, [r7, #12]
 266:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Write to ADCx SQR1 */
 267:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SQR1 = tmpreg1;
 202              		.loc 1 267 0
 203 011a 7B68     		ldr	r3, [r7, #4]
 204 011c FA68     		ldr	r2, [r7, #12]
 205 011e DA62     		str	r2, [r3, #44]
 268:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 206              		.loc 1 268 0
 207 0120 07F11407 		add	r7, r7, #20
 208 0124 BD46     		mov	sp, r7
 209 0126 80BC     		pop	{r7}
 210 0128 7047     		bx	lr
 211              	.L9:
 212 012a 00BF     		.align	2
 213              	.L8:
 214 012c FDF7F1FF 		.word	-919555
 215              		.cfi_endproc
 216              	.LFE30:
 218              		.align	2
 219              		.global	ADC_StructInit
 220              		.thumb
 221              		.thumb_func
 223              	ADC_StructInit:
 224              	.LFB31:
 269:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 270:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 271:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 272:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InitStruct : pointer to an ADC_InitTypeDef structure which will be initialized.
 273:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 274:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 275:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 276:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 225              		.loc 1 276 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 8
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230 0130 80B4     		push	{r7}
 231              	.LCFI6:
 232              		.cfi_def_cfa_offset 4
 233              		.cfi_offset 7, -4
 234 0132 83B0     		sub	sp, sp, #12
 235              	.LCFI7:
 236              		.cfi_def_cfa_offset 16
 237 0134 00AF     		add	r7, sp, #0
 238              	.LCFI8:
 239              		.cfi_def_cfa_register 7
 240 0136 7860     		str	r0, [r7, #4]
 277:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Reset ADC init structure parameters values */
 278:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_Mode member */
 279:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_Mode = ADC_Mode_Independent;
 241              		.loc 1 279 0
 242 0138 7B68     		ldr	r3, [r7, #4]
 243 013a 4FF00002 		mov	r2, #0
 244 013e 1A60     		str	r2, [r3, #0]
 280:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* initialize the ADC_ScanConvMode member */
 281:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 245              		.loc 1 281 0
 246 0140 7B68     		ldr	r3, [r7, #4]
 247 0142 4FF00002 		mov	r2, #0
 248 0146 1A71     		strb	r2, [r3, #4]
 282:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 283:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 249              		.loc 1 283 0
 250 0148 7B68     		ldr	r3, [r7, #4]
 251 014a 4FF00002 		mov	r2, #0
 252 014e 5A71     		strb	r2, [r3, #5]
 284:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 285:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 253              		.loc 1 285 0
 254 0150 7B68     		ldr	r3, [r7, #4]
 255 0152 4FF00002 		mov	r2, #0
 256 0156 9A60     		str	r2, [r3, #8]
 286:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_DataAlign member */
 287:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 257              		.loc 1 287 0
 258 0158 7B68     		ldr	r3, [r7, #4]
 259 015a 4FF00002 		mov	r2, #0
 260 015e DA60     		str	r2, [r3, #12]
 288:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Initialize the ADC_NbrOfChannel member */
 289:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADC_InitStruct->ADC_NbrOfChannel = 1;
 261              		.loc 1 289 0
 262 0160 7B68     		ldr	r3, [r7, #4]
 263 0162 4FF00102 		mov	r2, #1
 264 0166 1A74     		strb	r2, [r3, #16]
 290:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 265              		.loc 1 290 0
 266 0168 07F10C07 		add	r7, r7, #12
 267 016c BD46     		mov	sp, r7
 268 016e 80BC     		pop	{r7}
 269 0170 7047     		bx	lr
 270              		.cfi_endproc
 271              	.LFE31:
 273 0172 00BF     		.align	2
 274              		.global	ADC_Cmd
 275              		.thumb
 276              		.thumb_func
 278              	ADC_Cmd:
 279              	.LFB32:
 291:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 292:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 293:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 294:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 295:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the ADCx peripheral.
 296:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 297:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 298:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 299:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 300:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 280              		.loc 1 300 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 8
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285 0174 80B4     		push	{r7}
 286              	.LCFI9:
 287              		.cfi_def_cfa_offset 4
 288              		.cfi_offset 7, -4
 289 0176 83B0     		sub	sp, sp, #12
 290              	.LCFI10:
 291              		.cfi_def_cfa_offset 16
 292 0178 00AF     		add	r7, sp, #0
 293              	.LCFI11:
 294              		.cfi_def_cfa_register 7
 295 017a 7860     		str	r0, [r7, #4]
 296 017c 0B46     		mov	r3, r1
 297 017e FB70     		strb	r3, [r7, #3]
 301:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 302:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 303:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 304:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 298              		.loc 1 304 0
 299 0180 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 300 0182 002B     		cmp	r3, #0
 301 0184 06D0     		beq	.L12
 305:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 306:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 307:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_ADON_Set;
 302              		.loc 1 307 0
 303 0186 7B68     		ldr	r3, [r7, #4]
 304 0188 9B68     		ldr	r3, [r3, #8]
 305 018a 43F00102 		orr	r2, r3, #1
 306 018e 7B68     		ldr	r3, [r7, #4]
 307 0190 9A60     		str	r2, [r3, #8]
 308 0192 05E0     		b	.L11
 309              	.L12:
 308:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 309:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 310:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 311:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC peripheral */
 312:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_ADON_Reset;
 310              		.loc 1 312 0
 311 0194 7B68     		ldr	r3, [r7, #4]
 312 0196 9B68     		ldr	r3, [r3, #8]
 313 0198 23F00102 		bic	r2, r3, #1
 314 019c 7B68     		ldr	r3, [r7, #4]
 315 019e 9A60     		str	r2, [r3, #8]
 316              	.L11:
 313:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 314:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 317              		.loc 1 314 0
 318 01a0 07F10C07 		add	r7, r7, #12
 319 01a4 BD46     		mov	sp, r7
 320 01a6 80BC     		pop	{r7}
 321 01a8 7047     		bx	lr
 322              		.cfi_endproc
 323              	.LFE32:
 325 01aa 00BF     		.align	2
 326              		.global	ADC_DMACmd
 327              		.thumb
 328              		.thumb_func
 330              	ADC_DMACmd:
 331              	.LFB33:
 315:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 316:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 317:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
 318:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1 or 3 to select the ADC peripheral.
 319:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   Note: ADC2 hasn't a DMA capability.
 320:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
 321:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 322:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 323:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 324:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 325:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 332              		.loc 1 325 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337 01ac 80B4     		push	{r7}
 338              	.LCFI12:
 339              		.cfi_def_cfa_offset 4
 340              		.cfi_offset 7, -4
 341 01ae 83B0     		sub	sp, sp, #12
 342              	.LCFI13:
 343              		.cfi_def_cfa_offset 16
 344 01b0 00AF     		add	r7, sp, #0
 345              	.LCFI14:
 346              		.cfi_def_cfa_register 7
 347 01b2 7860     		str	r0, [r7, #4]
 348 01b4 0B46     		mov	r3, r1
 349 01b6 FB70     		strb	r3, [r7, #3]
 326:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 327:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_DMA_PERIPH(ADCx));
 328:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 329:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 350              		.loc 1 329 0
 351 01b8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 352 01ba 002B     		cmp	r3, #0
 353 01bc 06D0     		beq	.L15
 330:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 331:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC DMA request */
 332:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_DMA_Set;
 354              		.loc 1 332 0
 355 01be 7B68     		ldr	r3, [r7, #4]
 356 01c0 9B68     		ldr	r3, [r3, #8]
 357 01c2 43F48072 		orr	r2, r3, #256
 358 01c6 7B68     		ldr	r3, [r7, #4]
 359 01c8 9A60     		str	r2, [r3, #8]
 360 01ca 05E0     		b	.L14
 361              	.L15:
 333:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 334:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 335:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 336:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC DMA request */
 337:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_DMA_Reset;
 362              		.loc 1 337 0
 363 01cc 7B68     		ldr	r3, [r7, #4]
 364 01ce 9B68     		ldr	r3, [r3, #8]
 365 01d0 23F48072 		bic	r2, r3, #256
 366 01d4 7B68     		ldr	r3, [r7, #4]
 367 01d6 9A60     		str	r2, [r3, #8]
 368              	.L14:
 338:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 339:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 369              		.loc 1 339 0
 370 01d8 07F10C07 		add	r7, r7, #12
 371 01dc BD46     		mov	sp, r7
 372 01de 80BC     		pop	{r7}
 373 01e0 7047     		bx	lr
 374              		.cfi_endproc
 375              	.LFE33:
 377 01e2 00BF     		.align	2
 378              		.global	ADC_ITConfig
 379              		.thumb
 380              		.thumb_func
 382              	ADC_ITConfig:
 383              	.LFB34:
 340:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 341:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 342:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
 343:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 344:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
 345:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
 346:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
 347:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
 348:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
 349:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
 350:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 351:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 352:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 353:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)
 354:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 384              		.loc 1 354 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 16
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 01e4 80B4     		push	{r7}
 390              	.LCFI15:
 391              		.cfi_def_cfa_offset 4
 392              		.cfi_offset 7, -4
 393 01e6 85B0     		sub	sp, sp, #20
 394              	.LCFI16:
 395              		.cfi_def_cfa_offset 24
 396 01e8 00AF     		add	r7, sp, #0
 397              	.LCFI17:
 398              		.cfi_def_cfa_register 7
 399 01ea 7860     		str	r0, [r7, #4]
 400 01ec 1346     		mov	r3, r2
 401 01ee 0A46     		mov	r2, r1	@ movhi
 402 01f0 7A80     		strh	r2, [r7, #2]	@ movhi
 403 01f2 7B70     		strb	r3, [r7, #1]
 355:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 404              		.loc 1 355 0
 405 01f4 4FF00003 		mov	r3, #0
 406 01f8 FB73     		strb	r3, [r7, #15]
 356:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 357:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 358:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 359:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
 360:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
 361:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = (uint8_t)ADC_IT;
 407              		.loc 1 361 0
 408 01fa 7B88     		ldrh	r3, [r7, #2]	@ movhi
 409 01fc FB73     		strb	r3, [r7, #15]
 362:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 410              		.loc 1 362 0
 411 01fe 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 412 0200 002B     		cmp	r3, #0
 413 0202 06D0     		beq	.L18
 363:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 364:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC interrupts */
 365:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= itmask;
 414              		.loc 1 365 0
 415 0204 7B68     		ldr	r3, [r7, #4]
 416 0206 5A68     		ldr	r2, [r3, #4]
 417 0208 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 418 020a 1A43     		orrs	r2, r2, r3
 419 020c 7B68     		ldr	r3, [r7, #4]
 420 020e 5A60     		str	r2, [r3, #4]
 421 0210 07E0     		b	.L17
 422              	.L18:
 366:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 367:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 368:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 369:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC interrupts */
 370:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 423              		.loc 1 370 0
 424 0212 7B68     		ldr	r3, [r7, #4]
 425 0214 5A68     		ldr	r2, [r3, #4]
 426 0216 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 427 0218 6FEA0303 		mvn	r3, r3
 428 021c 1A40     		ands	r2, r2, r3
 429 021e 7B68     		ldr	r3, [r7, #4]
 430 0220 5A60     		str	r2, [r3, #4]
 431              	.L17:
 371:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 372:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 432              		.loc 1 372 0
 433 0222 07F11407 		add	r7, r7, #20
 434 0226 BD46     		mov	sp, r7
 435 0228 80BC     		pop	{r7}
 436 022a 7047     		bx	lr
 437              		.cfi_endproc
 438              	.LFE34:
 440              		.align	2
 441              		.global	ADC_ResetCalibration
 442              		.thumb
 443              		.thumb_func
 445              	ADC_ResetCalibration:
 446              	.LFB35:
 373:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 374:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 375:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Resets the selected ADC calibration registers.
 376:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 377:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 378:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 379:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ResetCalibration(ADC_TypeDef* ADCx)
 380:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 447              		.loc 1 380 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 8
 450              		@ frame_needed = 1, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 452 022c 80B4     		push	{r7}
 453              	.LCFI18:
 454              		.cfi_def_cfa_offset 4
 455              		.cfi_offset 7, -4
 456 022e 83B0     		sub	sp, sp, #12
 457              	.LCFI19:
 458              		.cfi_def_cfa_offset 16
 459 0230 00AF     		add	r7, sp, #0
 460              	.LCFI20:
 461              		.cfi_def_cfa_register 7
 462 0232 7860     		str	r0, [r7, #4]
 381:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 382:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 383:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Resets the selected ADC calibration registers */  
 384:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_RSTCAL_Set;
 463              		.loc 1 384 0
 464 0234 7B68     		ldr	r3, [r7, #4]
 465 0236 9B68     		ldr	r3, [r3, #8]
 466 0238 43F00802 		orr	r2, r3, #8
 467 023c 7B68     		ldr	r3, [r7, #4]
 468 023e 9A60     		str	r2, [r3, #8]
 385:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 469              		.loc 1 385 0
 470 0240 07F10C07 		add	r7, r7, #12
 471 0244 BD46     		mov	sp, r7
 472 0246 80BC     		pop	{r7}
 473 0248 7047     		bx	lr
 474              		.cfi_endproc
 475              	.LFE35:
 477 024a 00BF     		.align	2
 478              		.global	ADC_GetResetCalibrationStatus
 479              		.thumb
 480              		.thumb_func
 482              	ADC_GetResetCalibrationStatus:
 483              	.LFB36:
 386:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 387:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 388:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC reset calibration registers status.
 389:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 390:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC reset calibration registers (SET or RESET).
 391:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 392:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetResetCalibrationStatus(ADC_TypeDef* ADCx)
 393:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 484              		.loc 1 393 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 16
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489 024c 80B4     		push	{r7}
 490              	.LCFI21:
 491              		.cfi_def_cfa_offset 4
 492              		.cfi_offset 7, -4
 493 024e 85B0     		sub	sp, sp, #20
 494              	.LCFI22:
 495              		.cfi_def_cfa_offset 24
 496 0250 00AF     		add	r7, sp, #0
 497              	.LCFI23:
 498              		.cfi_def_cfa_register 7
 499 0252 7860     		str	r0, [r7, #4]
 394:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 500              		.loc 1 394 0
 501 0254 4FF00003 		mov	r3, #0
 502 0258 FB73     		strb	r3, [r7, #15]
 395:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 396:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 397:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of RSTCAL bit */
 398:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_RSTCAL_Set) != (uint32_t)RESET)
 503              		.loc 1 398 0
 504 025a 7B68     		ldr	r3, [r7, #4]
 505 025c 9B68     		ldr	r3, [r3, #8]
 506 025e 03F00803 		and	r3, r3, #8
 507 0262 002B     		cmp	r3, #0
 508 0264 03D0     		beq	.L22
 399:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 400:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* RSTCAL bit is set */
 401:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 509              		.loc 1 401 0
 510 0266 4FF00103 		mov	r3, #1
 511 026a FB73     		strb	r3, [r7, #15]
 512 026c 02E0     		b	.L23
 513              	.L22:
 402:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 403:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 404:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 405:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* RSTCAL bit is reset */
 406:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 514              		.loc 1 406 0
 515 026e 4FF00003 		mov	r3, #0
 516 0272 FB73     		strb	r3, [r7, #15]
 517              	.L23:
 407:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 408:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the RSTCAL bit status */
 409:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 518              		.loc 1 409 0
 519 0274 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 410:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 520              		.loc 1 410 0
 521 0276 1846     		mov	r0, r3
 522 0278 07F11407 		add	r7, r7, #20
 523 027c BD46     		mov	sp, r7
 524 027e 80BC     		pop	{r7}
 525 0280 7047     		bx	lr
 526              		.cfi_endproc
 527              	.LFE36:
 529 0282 00BF     		.align	2
 530              		.global	ADC_StartCalibration
 531              		.thumb
 532              		.thumb_func
 534              	ADC_StartCalibration:
 535              	.LFB37:
 411:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 412:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 413:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Starts the selected ADC calibration process.
 414:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 415:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 416:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 417:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_StartCalibration(ADC_TypeDef* ADCx)
 418:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 536              		.loc 1 418 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 8
 539              		@ frame_needed = 1, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 541 0284 80B4     		push	{r7}
 542              	.LCFI24:
 543              		.cfi_def_cfa_offset 4
 544              		.cfi_offset 7, -4
 545 0286 83B0     		sub	sp, sp, #12
 546              	.LCFI25:
 547              		.cfi_def_cfa_offset 16
 548 0288 00AF     		add	r7, sp, #0
 549              	.LCFI26:
 550              		.cfi_def_cfa_register 7
 551 028a 7860     		str	r0, [r7, #4]
 419:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 420:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 421:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Enable the selected ADC calibration process */  
 422:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 |= CR2_CAL_Set;
 552              		.loc 1 422 0
 553 028c 7B68     		ldr	r3, [r7, #4]
 554 028e 9B68     		ldr	r3, [r3, #8]
 555 0290 43F00402 		orr	r2, r3, #4
 556 0294 7B68     		ldr	r3, [r7, #4]
 557 0296 9A60     		str	r2, [r3, #8]
 423:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 558              		.loc 1 423 0
 559 0298 07F10C07 		add	r7, r7, #12
 560 029c BD46     		mov	sp, r7
 561 029e 80BC     		pop	{r7}
 562 02a0 7047     		bx	lr
 563              		.cfi_endproc
 564              	.LFE37:
 566 02a2 00BF     		.align	2
 567              		.global	ADC_GetCalibrationStatus
 568              		.thumb
 569              		.thumb_func
 571              	ADC_GetCalibrationStatus:
 572              	.LFB38:
 424:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 425:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 426:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC calibration status.
 427:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 428:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC calibration (SET or RESET).
 429:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 430:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetCalibrationStatus(ADC_TypeDef* ADCx)
 431:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 573              		.loc 1 431 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 16
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578 02a4 80B4     		push	{r7}
 579              	.LCFI27:
 580              		.cfi_def_cfa_offset 4
 581              		.cfi_offset 7, -4
 582 02a6 85B0     		sub	sp, sp, #20
 583              	.LCFI28:
 584              		.cfi_def_cfa_offset 24
 585 02a8 00AF     		add	r7, sp, #0
 586              	.LCFI29:
 587              		.cfi_def_cfa_register 7
 588 02aa 7860     		str	r0, [r7, #4]
 432:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 589              		.loc 1 432 0
 590 02ac 4FF00003 		mov	r3, #0
 591 02b0 FB73     		strb	r3, [r7, #15]
 433:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 434:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 435:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of CAL bit */
 436:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_CAL_Set) != (uint32_t)RESET)
 592              		.loc 1 436 0
 593 02b2 7B68     		ldr	r3, [r7, #4]
 594 02b4 9B68     		ldr	r3, [r3, #8]
 595 02b6 03F00403 		and	r3, r3, #4
 596 02ba 002B     		cmp	r3, #0
 597 02bc 03D0     		beq	.L27
 437:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 438:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* CAL bit is set: calibration on going */
 439:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 598              		.loc 1 439 0
 599 02be 4FF00103 		mov	r3, #1
 600 02c2 FB73     		strb	r3, [r7, #15]
 601 02c4 02E0     		b	.L28
 602              	.L27:
 440:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 441:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 442:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 443:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* CAL bit is reset: end of calibration */
 444:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 603              		.loc 1 444 0
 604 02c6 4FF00003 		mov	r3, #0
 605 02ca FB73     		strb	r3, [r7, #15]
 606              	.L28:
 445:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 446:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the CAL bit status */
 447:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 607              		.loc 1 447 0
 608 02cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 448:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 609              		.loc 1 448 0
 610 02ce 1846     		mov	r0, r3
 611 02d0 07F11407 		add	r7, r7, #20
 612 02d4 BD46     		mov	sp, r7
 613 02d6 80BC     		pop	{r7}
 614 02d8 7047     		bx	lr
 615              		.cfi_endproc
 616              	.LFE38:
 618 02da 00BF     		.align	2
 619              		.global	ADC_SoftwareStartConvCmd
 620              		.thumb
 621              		.thumb_func
 623              	ADC_SoftwareStartConvCmd:
 624              	.LFB39:
 449:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 450:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 451:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC software start conversion .
 452:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 453:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start conversion.
 454:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 455:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 456:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 457:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SoftwareStartConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 458:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 625              		.loc 1 458 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 8
 628              		@ frame_needed = 1, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630 02dc 80B4     		push	{r7}
 631              	.LCFI30:
 632              		.cfi_def_cfa_offset 4
 633              		.cfi_offset 7, -4
 634 02de 83B0     		sub	sp, sp, #12
 635              	.LCFI31:
 636              		.cfi_def_cfa_offset 16
 637 02e0 00AF     		add	r7, sp, #0
 638              	.LCFI32:
 639              		.cfi_def_cfa_register 7
 640 02e2 7860     		str	r0, [r7, #4]
 641 02e4 0B46     		mov	r3, r1
 642 02e6 FB70     		strb	r3, [r7, #3]
 459:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 460:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 461:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 462:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 643              		.loc 1 462 0
 644 02e8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 645 02ea 002B     		cmp	r3, #0
 646 02ec 06D0     		beq	.L31
 463:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 464:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event and start the selected
 465:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC conversion */
 466:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_SWSTART_Set;
 647              		.loc 1 466 0
 648 02ee 7B68     		ldr	r3, [r7, #4]
 649 02f0 9B68     		ldr	r3, [r3, #8]
 650 02f2 43F4A002 		orr	r2, r3, #5242880
 651 02f6 7B68     		ldr	r3, [r7, #4]
 652 02f8 9A60     		str	r2, [r3, #8]
 653 02fa 05E0     		b	.L30
 654              	.L31:
 467:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 468:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 469:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 470:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event and stop the selected
 471:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC conversion */
 472:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_SWSTART_Reset;
 655              		.loc 1 472 0
 656 02fc 7B68     		ldr	r3, [r7, #4]
 657 02fe 9B68     		ldr	r3, [r3, #8]
 658 0300 23F4A002 		bic	r2, r3, #5242880
 659 0304 7B68     		ldr	r3, [r7, #4]
 660 0306 9A60     		str	r2, [r3, #8]
 661              	.L30:
 473:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 474:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 662              		.loc 1 474 0
 663 0308 07F10C07 		add	r7, r7, #12
 664 030c BD46     		mov	sp, r7
 665 030e 80BC     		pop	{r7}
 666 0310 7047     		bx	lr
 667              		.cfi_endproc
 668              	.LFE39:
 670 0312 00BF     		.align	2
 671              		.global	ADC_GetSoftwareStartConvStatus
 672              		.thumb
 673              		.thumb_func
 675              	ADC_GetSoftwareStartConvStatus:
 676              	.LFB40:
 475:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 476:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 477:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start conversion Status.
 478:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 479:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 480:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 481:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 482:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 677              		.loc 1 482 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 16
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0314 80B4     		push	{r7}
 683              	.LCFI33:
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 0316 85B0     		sub	sp, sp, #20
 687              	.LCFI34:
 688              		.cfi_def_cfa_offset 24
 689 0318 00AF     		add	r7, sp, #0
 690              	.LCFI35:
 691              		.cfi_def_cfa_register 7
 692 031a 7860     		str	r0, [r7, #4]
 483:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 693              		.loc 1 483 0
 694 031c 4FF00003 		mov	r3, #0
 695 0320 FB73     		strb	r3, [r7, #15]
 484:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 485:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 486:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of SWSTART bit */
 487:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_SWSTART_Set) != (uint32_t)RESET)
 696              		.loc 1 487 0
 697 0322 7B68     		ldr	r3, [r7, #4]
 698 0324 9B68     		ldr	r3, [r3, #8]
 699 0326 03F48003 		and	r3, r3, #4194304
 700 032a 002B     		cmp	r3, #0
 701 032c 03D0     		beq	.L34
 488:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 489:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* SWSTART bit is set */
 490:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 702              		.loc 1 490 0
 703 032e 4FF00103 		mov	r3, #1
 704 0332 FB73     		strb	r3, [r7, #15]
 705 0334 02E0     		b	.L35
 706              	.L34:
 491:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 492:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 493:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 494:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* SWSTART bit is reset */
 495:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 707              		.loc 1 495 0
 708 0336 4FF00003 		mov	r3, #0
 709 033a FB73     		strb	r3, [r7, #15]
 710              	.L35:
 496:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 497:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the SWSTART bit status */
 498:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 711              		.loc 1 498 0
 712 033c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 499:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 713              		.loc 1 499 0
 714 033e 1846     		mov	r0, r3
 715 0340 07F11407 		add	r7, r7, #20
 716 0344 BD46     		mov	sp, r7
 717 0346 80BC     		pop	{r7}
 718 0348 7047     		bx	lr
 719              		.cfi_endproc
 720              	.LFE40:
 722 034a 00BF     		.align	2
 723              		.global	ADC_DiscModeChannelCountConfig
 724              		.thumb
 725              		.thumb_func
 727              	ADC_DiscModeChannelCountConfig:
 728              	.LFB41:
 500:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 501:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 502:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular
 503:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         group channel.
 504:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 505:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel
 506:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         count value. This number must be between 1 and 8.
 507:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 508:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 509:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 510:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 729              		.loc 1 510 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 16
 732              		@ frame_needed = 1, uses_anonymous_args = 0
 733              		@ link register save eliminated.
 734 034c 80B4     		push	{r7}
 735              	.LCFI36:
 736              		.cfi_def_cfa_offset 4
 737              		.cfi_offset 7, -4
 738 034e 85B0     		sub	sp, sp, #20
 739              	.LCFI37:
 740              		.cfi_def_cfa_offset 24
 741 0350 00AF     		add	r7, sp, #0
 742              	.LCFI38:
 743              		.cfi_def_cfa_register 7
 744 0352 7860     		str	r0, [r7, #4]
 745 0354 0B46     		mov	r3, r1
 746 0356 FB70     		strb	r3, [r7, #3]
 511:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 747              		.loc 1 511 0
 748 0358 4FF00003 		mov	r3, #0
 749 035c FB60     		str	r3, [r7, #12]
 512:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 750              		.loc 1 512 0
 751 035e 4FF00003 		mov	r3, #0
 752 0362 BB60     		str	r3, [r7, #8]
 513:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 514:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 515:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 516:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 517:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->CR1;
 753              		.loc 1 517 0
 754 0364 7B68     		ldr	r3, [r7, #4]
 755 0366 5B68     		ldr	r3, [r3, #4]
 756 0368 FB60     		str	r3, [r7, #12]
 518:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old discontinuous mode channel count */
 519:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= CR1_DISCNUM_Reset;
 757              		.loc 1 519 0
 758 036a FB68     		ldr	r3, [r7, #12]
 759 036c 23F46043 		bic	r3, r3, #57344
 760 0370 FB60     		str	r3, [r7, #12]
 520:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the discontinuous mode channel count */
 521:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = Number - 1;
 761              		.loc 1 521 0
 762 0372 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 763 0374 03F1FF33 		add	r3, r3, #-1
 764 0378 BB60     		str	r3, [r7, #8]
 522:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 765              		.loc 1 522 0
 766 037a BB68     		ldr	r3, [r7, #8]
 767 037c 4FEA4333 		lsl	r3, r3, #13
 768 0380 FA68     		ldr	r2, [r7, #12]
 769 0382 1343     		orrs	r3, r3, r2
 770 0384 FB60     		str	r3, [r7, #12]
 523:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 524:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg1;
 771              		.loc 1 524 0
 772 0386 7B68     		ldr	r3, [r7, #4]
 773 0388 FA68     		ldr	r2, [r7, #12]
 774 038a 5A60     		str	r2, [r3, #4]
 525:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 775              		.loc 1 525 0
 776 038c 07F11407 		add	r7, r7, #20
 777 0390 BD46     		mov	sp, r7
 778 0392 80BC     		pop	{r7}
 779 0394 7047     		bx	lr
 780              		.cfi_endproc
 781              	.LFE41:
 783 0396 00BF     		.align	2
 784              		.global	ADC_DiscModeCmd
 785              		.thumb
 786              		.thumb_func
 788              	ADC_DiscModeCmd:
 789              	.LFB42:
 526:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 527:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 528:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group
 529:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 530:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 531:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 532:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         on regular group channel.
 533:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 534:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 535:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 536:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 537:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 790              		.loc 1 537 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 8
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794              		@ link register save eliminated.
 795 0398 80B4     		push	{r7}
 796              	.LCFI39:
 797              		.cfi_def_cfa_offset 4
 798              		.cfi_offset 7, -4
 799 039a 83B0     		sub	sp, sp, #12
 800              	.LCFI40:
 801              		.cfi_def_cfa_offset 16
 802 039c 00AF     		add	r7, sp, #0
 803              	.LCFI41:
 804              		.cfi_def_cfa_register 7
 805 039e 7860     		str	r0, [r7, #4]
 806 03a0 0B46     		mov	r3, r1
 807 03a2 FB70     		strb	r3, [r7, #3]
 538:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 539:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 540:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 541:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 808              		.loc 1 541 0
 809 03a4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 810 03a6 002B     		cmp	r3, #0
 811 03a8 06D0     		beq	.L39
 542:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 543:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 544:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_DISCEN_Set;
 812              		.loc 1 544 0
 813 03aa 7B68     		ldr	r3, [r7, #4]
 814 03ac 5B68     		ldr	r3, [r3, #4]
 815 03ae 43F40062 		orr	r2, r3, #2048
 816 03b2 7B68     		ldr	r3, [r7, #4]
 817 03b4 5A60     		str	r2, [r3, #4]
 818 03b6 05E0     		b	.L38
 819              	.L39:
 545:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 546:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 547:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 548:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 549:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_DISCEN_Reset;
 820              		.loc 1 549 0
 821 03b8 7B68     		ldr	r3, [r7, #4]
 822 03ba 5B68     		ldr	r3, [r3, #4]
 823 03bc 23F40062 		bic	r2, r3, #2048
 824 03c0 7B68     		ldr	r3, [r7, #4]
 825 03c2 5A60     		str	r2, [r3, #4]
 826              	.L38:
 550:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 551:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 827              		.loc 1 551 0
 828 03c4 07F10C07 		add	r7, r7, #12
 829 03c8 BD46     		mov	sp, r7
 830 03ca 80BC     		pop	{r7}
 831 03cc 7047     		bx	lr
 832              		.cfi_endproc
 833              	.LFE42:
 835 03ce 00BF     		.align	2
 836              		.global	ADC_RegularChannelConfig
 837              		.thumb
 838              		.thumb_func
 840              	ADC_RegularChannelConfig:
 841              	.LFB43:
 552:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 553:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 554:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 555:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 556:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 557:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 558:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 559:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 560:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 561:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 562:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 563:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 564:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 565:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 566:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 567:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 568:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 569:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 570:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 571:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 572:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 573:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 574:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 575:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 576:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 577:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the regular group sequencer. This parameter must be between 1 to 16.
 578:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 579:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 580:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 581:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 582:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 583:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 584:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 585:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 586:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 587:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 588:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 589:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 590:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 591:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 842              		.loc 1 591 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 16
 845              		@ frame_needed = 1, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 847 03d0 80B4     		push	{r7}
 848              	.LCFI42:
 849              		.cfi_def_cfa_offset 4
 850              		.cfi_offset 7, -4
 851 03d2 85B0     		sub	sp, sp, #20
 852              	.LCFI43:
 853              		.cfi_def_cfa_offset 24
 854 03d4 00AF     		add	r7, sp, #0
 855              	.LCFI44:
 856              		.cfi_def_cfa_register 7
 857 03d6 7860     		str	r0, [r7, #4]
 858 03d8 F970     		strb	r1, [r7, #3]
 859 03da BA70     		strb	r2, [r7, #2]
 860 03dc 7B70     		strb	r3, [r7, #1]
 592:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 861              		.loc 1 592 0
 862 03de 4FF00003 		mov	r3, #0
 863 03e2 FB60     		str	r3, [r7, #12]
 864 03e4 4FF00003 		mov	r3, #0
 865 03e8 BB60     		str	r3, [r7, #8]
 593:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 594:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 595:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 596:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 597:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 598:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 599:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 866              		.loc 1 599 0
 867 03ea FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 868 03ec 092B     		cmp	r3, #9
 869 03ee 27D9     		bls	.L42
 600:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 601:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 602:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 870              		.loc 1 602 0
 871 03f0 7B68     		ldr	r3, [r7, #4]
 872 03f2 DB68     		ldr	r3, [r3, #12]
 873 03f4 FB60     		str	r3, [r7, #12]
 603:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 604:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3 * (ADC_Channel - 10));
 874              		.loc 1 604 0
 875 03f6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 876 03f8 1346     		mov	r3, r2
 877 03fa 4FEA4303 		lsl	r3, r3, #1
 878 03fe 9B18     		adds	r3, r3, r2
 879 0400 A3F11E03 		sub	r3, r3, #30
 880 0404 4FF00702 		mov	r2, #7
 881 0408 02FA03F3 		lsl	r3, r2, r3
 882 040c BB60     		str	r3, [r7, #8]
 605:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 606:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 883              		.loc 1 606 0
 884 040e BB68     		ldr	r3, [r7, #8]
 885 0410 6FEA0303 		mvn	r3, r3
 886 0414 FA68     		ldr	r2, [r7, #12]
 887 0416 1340     		ands	r3, r3, r2
 888 0418 FB60     		str	r3, [r7, #12]
 607:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 608:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 889              		.loc 1 608 0
 890 041a 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 891 041c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 892 041e 1346     		mov	r3, r2
 893 0420 4FEA4303 		lsl	r3, r3, #1
 894 0424 9B18     		adds	r3, r3, r2
 895 0426 A3F11E03 		sub	r3, r3, #30
 896 042a 01FA03F3 		lsl	r3, r1, r3
 897 042e BB60     		str	r3, [r7, #8]
 609:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 610:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 898              		.loc 1 610 0
 899 0430 FA68     		ldr	r2, [r7, #12]
 900 0432 BB68     		ldr	r3, [r7, #8]
 901 0434 1343     		orrs	r3, r3, r2
 902 0436 FB60     		str	r3, [r7, #12]
 611:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 612:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 903              		.loc 1 612 0
 904 0438 7B68     		ldr	r3, [r7, #4]
 905 043a FA68     		ldr	r2, [r7, #12]
 906 043c DA60     		str	r2, [r3, #12]
 907 043e 22E0     		b	.L43
 908              	.L42:
 613:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 614:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 615:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 616:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 617:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 909              		.loc 1 617 0
 910 0440 7B68     		ldr	r3, [r7, #4]
 911 0442 1B69     		ldr	r3, [r3, #16]
 912 0444 FB60     		str	r3, [r7, #12]
 618:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 619:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 913              		.loc 1 619 0
 914 0446 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 915 0448 1346     		mov	r3, r2
 916 044a 4FEA4303 		lsl	r3, r3, #1
 917 044e 9B18     		adds	r3, r3, r2
 918 0450 4FF00702 		mov	r2, #7
 919 0454 02FA03F3 		lsl	r3, r2, r3
 920 0458 BB60     		str	r3, [r7, #8]
 620:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 621:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 921              		.loc 1 621 0
 922 045a BB68     		ldr	r3, [r7, #8]
 923 045c 6FEA0303 		mvn	r3, r3
 924 0460 FA68     		ldr	r2, [r7, #12]
 925 0462 1340     		ands	r3, r3, r2
 926 0464 FB60     		str	r3, [r7, #12]
 622:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 623:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 927              		.loc 1 623 0
 928 0466 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 929 0468 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 930 046a 1346     		mov	r3, r2
 931 046c 4FEA4303 		lsl	r3, r3, #1
 932 0470 9B18     		adds	r3, r3, r2
 933 0472 01FA03F3 		lsl	r3, r1, r3
 934 0476 BB60     		str	r3, [r7, #8]
 624:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 625:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 935              		.loc 1 625 0
 936 0478 FA68     		ldr	r2, [r7, #12]
 937 047a BB68     		ldr	r3, [r7, #8]
 938 047c 1343     		orrs	r3, r3, r2
 939 047e FB60     		str	r3, [r7, #12]
 626:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 627:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 940              		.loc 1 627 0
 941 0480 7B68     		ldr	r3, [r7, #4]
 942 0482 FA68     		ldr	r2, [r7, #12]
 943 0484 1A61     		str	r2, [r3, #16]
 944              	.L43:
 628:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 629:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 1 to 6 */
 630:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (Rank < 7)
 945              		.loc 1 630 0
 946 0486 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 947 0488 062B     		cmp	r3, #6
 948 048a 27D8     		bhi	.L44
 631:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 632:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 633:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR3;
 949              		.loc 1 633 0
 950 048c 7B68     		ldr	r3, [r7, #4]
 951 048e 5B6B     		ldr	r3, [r3, #52]
 952 0490 FB60     		str	r3, [r7, #12]
 634:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 635:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR3_SQ_Set << (5 * (Rank - 1));
 953              		.loc 1 635 0
 954 0492 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 955 0494 03F1FF32 		add	r2, r3, #-1
 956 0498 1346     		mov	r3, r2
 957 049a 4FEA8303 		lsl	r3, r3, #2
 958 049e 9B18     		adds	r3, r3, r2
 959 04a0 4FF01F02 		mov	r2, #31
 960 04a4 02FA03F3 		lsl	r3, r2, r3
 961 04a8 BB60     		str	r3, [r7, #8]
 636:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 637:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 962              		.loc 1 637 0
 963 04aa BB68     		ldr	r3, [r7, #8]
 964 04ac 6FEA0303 		mvn	r3, r3
 965 04b0 FA68     		ldr	r2, [r7, #12]
 966 04b2 1340     		ands	r3, r3, r2
 967 04b4 FB60     		str	r3, [r7, #12]
 638:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 639:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 968              		.loc 1 639 0
 969 04b6 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 970 04b8 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 971 04ba 03F1FF32 		add	r2, r3, #-1
 972 04be 1346     		mov	r3, r2
 973 04c0 4FEA8303 		lsl	r3, r3, #2
 974 04c4 9B18     		adds	r3, r3, r2
 975 04c6 01FA03F3 		lsl	r3, r1, r3
 976 04ca BB60     		str	r3, [r7, #8]
 640:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 641:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 977              		.loc 1 641 0
 978 04cc FA68     		ldr	r2, [r7, #12]
 979 04ce BB68     		ldr	r3, [r7, #8]
 980 04d0 1343     		orrs	r3, r3, r2
 981 04d2 FB60     		str	r3, [r7, #12]
 642:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 643:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR3 = tmpreg1;
 982              		.loc 1 643 0
 983 04d4 7B68     		ldr	r3, [r7, #4]
 984 04d6 FA68     		ldr	r2, [r7, #12]
 985 04d8 5A63     		str	r2, [r3, #52]
 986 04da 51E0     		b	.L41
 987              	.L44:
 644:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 645:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 7 to 12 */
 646:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else if (Rank < 13)
 988              		.loc 1 646 0
 989 04dc BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 990 04de 0C2B     		cmp	r3, #12
 991 04e0 27D8     		bhi	.L46
 647:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 648:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 649:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR2;
 992              		.loc 1 649 0
 993 04e2 7B68     		ldr	r3, [r7, #4]
 994 04e4 1B6B     		ldr	r3, [r3, #48]
 995 04e6 FB60     		str	r3, [r7, #12]
 650:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 651:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR2_SQ_Set << (5 * (Rank - 7));
 996              		.loc 1 651 0
 997 04e8 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 998 04ea 1346     		mov	r3, r2
 999 04ec 4FEA8303 		lsl	r3, r3, #2
 1000 04f0 9B18     		adds	r3, r3, r2
 1001 04f2 A3F12303 		sub	r3, r3, #35
 1002 04f6 4FF01F02 		mov	r2, #31
 1003 04fa 02FA03F3 		lsl	r3, r2, r3
 1004 04fe BB60     		str	r3, [r7, #8]
 652:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 653:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1005              		.loc 1 653 0
 1006 0500 BB68     		ldr	r3, [r7, #8]
 1007 0502 6FEA0303 		mvn	r3, r3
 1008 0506 FA68     		ldr	r2, [r7, #12]
 1009 0508 1340     		ands	r3, r3, r2
 1010 050a FB60     		str	r3, [r7, #12]
 654:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 655:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 1011              		.loc 1 655 0
 1012 050c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1013 050e BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1014 0510 1346     		mov	r3, r2
 1015 0512 4FEA8303 		lsl	r3, r3, #2
 1016 0516 9B18     		adds	r3, r3, r2
 1017 0518 A3F12303 		sub	r3, r3, #35
 1018 051c 01FA03F3 		lsl	r3, r1, r3
 1019 0520 BB60     		str	r3, [r7, #8]
 656:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 657:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1020              		.loc 1 657 0
 1021 0522 FA68     		ldr	r2, [r7, #12]
 1022 0524 BB68     		ldr	r3, [r7, #8]
 1023 0526 1343     		orrs	r3, r3, r2
 1024 0528 FB60     		str	r3, [r7, #12]
 658:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 659:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR2 = tmpreg1;
 1025              		.loc 1 659 0
 1026 052a 7B68     		ldr	r3, [r7, #4]
 1027 052c FA68     		ldr	r2, [r7, #12]
 1028 052e 1A63     		str	r2, [r3, #48]
 1029 0530 26E0     		b	.L41
 1030              	.L46:
 660:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 661:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* For Rank 13 to 16 */
 662:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 663:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 664:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 665:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SQR1;
 1031              		.loc 1 665 0
 1032 0532 7B68     		ldr	r3, [r7, #4]
 1033 0534 DB6A     		ldr	r3, [r3, #44]
 1034 0536 FB60     		str	r3, [r7, #12]
 666:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 667:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SQR1_SQ_Set << (5 * (Rank - 13));
 1035              		.loc 1 667 0
 1036 0538 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1037 053a 1346     		mov	r3, r2
 1038 053c 4FEA8303 		lsl	r3, r3, #2
 1039 0540 9B18     		adds	r3, r3, r2
 1040 0542 A3F14103 		sub	r3, r3, #65
 1041 0546 4FF01F02 		mov	r2, #31
 1042 054a 02FA03F3 		lsl	r3, r2, r3
 1043 054e BB60     		str	r3, [r7, #8]
 668:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old SQx bits for the selected rank */
 669:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1044              		.loc 1 669 0
 1045 0550 BB68     		ldr	r3, [r7, #8]
 1046 0552 6FEA0303 		mvn	r3, r3
 1047 0556 FA68     		ldr	r2, [r7, #12]
 1048 0558 1340     		ands	r3, r3, r2
 1049 055a FB60     		str	r3, [r7, #12]
 670:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 671:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 1050              		.loc 1 671 0
 1051 055c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1052 055e BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1053 0560 1346     		mov	r3, r2
 1054 0562 4FEA8303 		lsl	r3, r3, #2
 1055 0566 9B18     		adds	r3, r3, r2
 1056 0568 A3F14103 		sub	r3, r3, #65
 1057 056c 01FA03F3 		lsl	r3, r1, r3
 1058 0570 BB60     		str	r3, [r7, #8]
 672:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the SQx bits for the selected rank */
 673:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1059              		.loc 1 673 0
 1060 0572 FA68     		ldr	r2, [r7, #12]
 1061 0574 BB68     		ldr	r3, [r7, #8]
 1062 0576 1343     		orrs	r3, r3, r2
 1063 0578 FB60     		str	r3, [r7, #12]
 674:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 675:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SQR1 = tmpreg1;
 1064              		.loc 1 675 0
 1065 057a 7B68     		ldr	r3, [r7, #4]
 1066 057c FA68     		ldr	r2, [r7, #12]
 1067 057e DA62     		str	r2, [r3, #44]
 1068              	.L41:
 676:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 677:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1069              		.loc 1 677 0
 1070 0580 07F11407 		add	r7, r7, #20
 1071 0584 BD46     		mov	sp, r7
 1072 0586 80BC     		pop	{r7}
 1073 0588 7047     		bx	lr
 1074              		.cfi_endproc
 1075              	.LFE43:
 1077 058a 00BF     		.align	2
 1078              		.global	ADC_ExternalTrigConvCmd
 1079              		.thumb
 1080              		.thumb_func
 1082              	ADC_ExternalTrigConvCmd:
 1083              	.LFB44:
 678:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 679:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 680:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx conversion through external trigger.
 681:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 682:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of conversion.
 683:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 684:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 685:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 686:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 687:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1084              		.loc 1 687 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 8
 1087              		@ frame_needed = 1, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 1089 058c 80B4     		push	{r7}
 1090              	.LCFI45:
 1091              		.cfi_def_cfa_offset 4
 1092              		.cfi_offset 7, -4
 1093 058e 83B0     		sub	sp, sp, #12
 1094              	.LCFI46:
 1095              		.cfi_def_cfa_offset 16
 1096 0590 00AF     		add	r7, sp, #0
 1097              	.LCFI47:
 1098              		.cfi_def_cfa_register 7
 1099 0592 7860     		str	r0, [r7, #4]
 1100 0594 0B46     		mov	r3, r1
 1101 0596 FB70     		strb	r3, [r7, #3]
 688:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 689:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 690:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 691:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1102              		.loc 1 691 0
 1103 0598 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1104 059a 002B     		cmp	r3, #0
 1105 059c 06D0     		beq	.L48
 692:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 693:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion on external event */
 694:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_EXTTRIG_Set;
 1106              		.loc 1 694 0
 1107 059e 7B68     		ldr	r3, [r7, #4]
 1108 05a0 9B68     		ldr	r3, [r3, #8]
 1109 05a2 43F48012 		orr	r2, r3, #1048576
 1110 05a6 7B68     		ldr	r3, [r7, #4]
 1111 05a8 9A60     		str	r2, [r3, #8]
 1112 05aa 05E0     		b	.L47
 1113              	.L48:
 695:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 696:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 697:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 698:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event */
 699:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_EXTTRIG_Reset;
 1114              		.loc 1 699 0
 1115 05ac 7B68     		ldr	r3, [r7, #4]
 1116 05ae 9B68     		ldr	r3, [r3, #8]
 1117 05b0 23F48012 		bic	r2, r3, #1048576
 1118 05b4 7B68     		ldr	r3, [r7, #4]
 1119 05b6 9A60     		str	r2, [r3, #8]
 1120              	.L47:
 700:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 701:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1121              		.loc 1 701 0
 1122 05b8 07F10C07 		add	r7, r7, #12
 1123 05bc BD46     		mov	sp, r7
 1124 05be 80BC     		pop	{r7}
 1125 05c0 7047     		bx	lr
 1126              		.cfi_endproc
 1127              	.LFE44:
 1129 05c2 00BF     		.align	2
 1130              		.global	ADC_GetConversionValue
 1131              		.thumb
 1132              		.thumb_func
 1134              	ADC_GetConversionValue:
 1135              	.LFB45:
 702:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 703:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 704:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 705:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 706:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 707:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 708:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 709:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1136              		.loc 1 709 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 8
 1139              		@ frame_needed = 1, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
 1141 05c4 80B4     		push	{r7}
 1142              	.LCFI48:
 1143              		.cfi_def_cfa_offset 4
 1144              		.cfi_offset 7, -4
 1145 05c6 83B0     		sub	sp, sp, #12
 1146              	.LCFI49:
 1147              		.cfi_def_cfa_offset 16
 1148 05c8 00AF     		add	r7, sp, #0
 1149              	.LCFI50:
 1150              		.cfi_def_cfa_register 7
 1151 05ca 7860     		str	r0, [r7, #4]
 710:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 711:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 712:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the selected ADC conversion value */
 713:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (uint16_t) ADCx->DR;
 1152              		.loc 1 713 0
 1153 05cc 7B68     		ldr	r3, [r7, #4]
 1154 05ce DB6C     		ldr	r3, [r3, #76]
 1155 05d0 9BB2     		uxth	r3, r3
 714:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1156              		.loc 1 714 0
 1157 05d2 1846     		mov	r0, r3
 1158 05d4 07F10C07 		add	r7, r7, #12
 1159 05d8 BD46     		mov	sp, r7
 1160 05da 80BC     		pop	{r7}
 1161 05dc 7047     		bx	lr
 1162              		.cfi_endproc
 1163              	.LFE45:
 1165 05de 00BF     		.align	2
 1166              		.global	ADC_GetDualModeConversionValue
 1167              		.thumb
 1168              		.thumb_func
 1170              	ADC_GetDualModeConversionValue:
 1171              	.LFB46:
 715:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 716:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 717:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the last ADC1 and ADC2 conversion result data in dual mode.
 718:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
 719:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 720:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint32_t ADC_GetDualModeConversionValue(void)
 721:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1172              		.loc 1 721 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 1, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 1177 05e0 80B4     		push	{r7}
 1178              	.LCFI51:
 1179              		.cfi_def_cfa_offset 4
 1180              		.cfi_offset 7, -4
 1181 05e2 00AF     		add	r7, sp, #0
 1182              	.LCFI52:
 1183              		.cfi_def_cfa_register 7
 722:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the dual mode conversion value */
 723:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (*(__IO uint32_t *) DR_ADDRESS);
 1184              		.loc 1 723 0
 1185 05e4 024B     		ldr	r3, .L54
 1186 05e6 1B68     		ldr	r3, [r3, #0]
 724:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1187              		.loc 1 724 0
 1188 05e8 1846     		mov	r0, r3
 1189 05ea BD46     		mov	sp, r7
 1190 05ec 80BC     		pop	{r7}
 1191 05ee 7047     		bx	lr
 1192              	.L55:
 1193              		.align	2
 1194              	.L54:
 1195 05f0 4C240140 		.word	1073816652
 1196              		.cfi_endproc
 1197              	.LFE46:
 1199              		.align	2
 1200              		.global	ADC_AutoInjectedConvCmd
 1201              		.thumb
 1202              		.thumb_func
 1204              	ADC_AutoInjectedConvCmd:
 1205              	.LFB47:
 725:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 726:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 727:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group
 728:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         conversion after regular one.
 729:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 730:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
 731:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 732:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 733:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 734:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 735:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1206              		.loc 1 735 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 8
 1209              		@ frame_needed = 1, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 1211 05f4 80B4     		push	{r7}
 1212              	.LCFI53:
 1213              		.cfi_def_cfa_offset 4
 1214              		.cfi_offset 7, -4
 1215 05f6 83B0     		sub	sp, sp, #12
 1216              	.LCFI54:
 1217              		.cfi_def_cfa_offset 16
 1218 05f8 00AF     		add	r7, sp, #0
 1219              	.LCFI55:
 1220              		.cfi_def_cfa_register 7
 1221 05fa 7860     		str	r0, [r7, #4]
 1222 05fc 0B46     		mov	r3, r1
 1223 05fe FB70     		strb	r3, [r7, #3]
 736:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 737:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 738:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 739:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1224              		.loc 1 739 0
 1225 0600 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1226 0602 002B     		cmp	r3, #0
 1227 0604 06D0     		beq	.L57
 740:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 741:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
 742:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JAUTO_Set;
 1228              		.loc 1 742 0
 1229 0606 7B68     		ldr	r3, [r7, #4]
 1230 0608 5B68     		ldr	r3, [r3, #4]
 1231 060a 43F48062 		orr	r2, r3, #1024
 1232 060e 7B68     		ldr	r3, [r7, #4]
 1233 0610 5A60     		str	r2, [r3, #4]
 1234 0612 05E0     		b	.L56
 1235              	.L57:
 743:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 744:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 745:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 746:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
 747:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JAUTO_Reset;
 1236              		.loc 1 747 0
 1237 0614 7B68     		ldr	r3, [r7, #4]
 1238 0616 5B68     		ldr	r3, [r3, #4]
 1239 0618 23F48062 		bic	r2, r3, #1024
 1240 061c 7B68     		ldr	r3, [r7, #4]
 1241 061e 5A60     		str	r2, [r3, #4]
 1242              	.L56:
 748:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 749:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1243              		.loc 1 749 0
 1244 0620 07F10C07 		add	r7, r7, #12
 1245 0624 BD46     		mov	sp, r7
 1246 0626 80BC     		pop	{r7}
 1247 0628 7047     		bx	lr
 1248              		.cfi_endproc
 1249              	.LFE47:
 1251 062a 00BF     		.align	2
 1252              		.global	ADC_InjectedDiscModeCmd
 1253              		.thumb
 1254              		.thumb_func
 1256              	ADC_InjectedDiscModeCmd:
 1257              	.LFB48:
 750:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 751:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 752:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group
 753:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channel for the specified ADC
 754:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 755:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode
 756:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         on injected group channel.
 757:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 758:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 759:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 760:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 761:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1258              		.loc 1 761 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 8
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262              		@ link register save eliminated.
 1263 062c 80B4     		push	{r7}
 1264              	.LCFI56:
 1265              		.cfi_def_cfa_offset 4
 1266              		.cfi_offset 7, -4
 1267 062e 83B0     		sub	sp, sp, #12
 1268              	.LCFI57:
 1269              		.cfi_def_cfa_offset 16
 1270 0630 00AF     		add	r7, sp, #0
 1271              	.LCFI58:
 1272              		.cfi_def_cfa_register 7
 1273 0632 7860     		str	r0, [r7, #4]
 1274 0634 0B46     		mov	r3, r1
 1275 0636 FB70     		strb	r3, [r7, #3]
 762:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 763:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 764:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 765:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1276              		.loc 1 765 0
 1277 0638 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1278 063a 002B     		cmp	r3, #0
 1279 063c 06D0     		beq	.L60
 766:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 767:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
 768:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 |= CR1_JDISCEN_Set;
 1280              		.loc 1 768 0
 1281 063e 7B68     		ldr	r3, [r7, #4]
 1282 0640 5B68     		ldr	r3, [r3, #4]
 1283 0642 43F48052 		orr	r2, r3, #4096
 1284 0646 7B68     		ldr	r3, [r7, #4]
 1285 0648 5A60     		str	r2, [r3, #4]
 1286 064a 05E0     		b	.L59
 1287              	.L60:
 769:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 770:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 771:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 772:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
 773:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR1 &= CR1_JDISCEN_Reset;
 1288              		.loc 1 773 0
 1289 064c 7B68     		ldr	r3, [r7, #4]
 1290 064e 5B68     		ldr	r3, [r3, #4]
 1291 0650 23F48052 		bic	r2, r3, #4096
 1292 0654 7B68     		ldr	r3, [r7, #4]
 1293 0656 5A60     		str	r2, [r3, #4]
 1294              	.L59:
 774:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 775:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1295              		.loc 1 775 0
 1296 0658 07F10C07 		add	r7, r7, #12
 1297 065c BD46     		mov	sp, r7
 1298 065e 80BC     		pop	{r7}
 1299 0660 7047     		bx	lr
 1300              		.cfi_endproc
 1301              	.LFE48:
 1303 0662 00BF     		.align	2
 1304              		.global	ADC_ExternalTrigInjectedConvConfig
 1305              		.thumb
 1306              		.thumb_func
 1308              	ADC_ExternalTrigInjectedConvConfig:
 1309              	.LFB49:
 776:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 777:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 778:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
 779:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 780:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion. 
 781:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 782:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected (for ADC1, ADC2 and ADC3
 783:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected (for ADC1, ADC2 and
 784:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected (for ADC1 and ADC2)
 785:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected (for ADC1 and ADC2)
 786:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected (for ADC1 and ADC2)
 787:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected (for ADC1 and ADC2)
 788:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_Ext_IT15_TIM8_CC4: External interrupt line 15 or Timer8
 789:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *                                                       capture compare4 event selected (for ADC1
 790:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected (for ADC3 only)
 791:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected (for ADC3 only)    
 792:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected (for ADC3 only)
 793:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected (for ADC3 only)         
 794:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected (for ADC3 only)    
 795:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_ExternalTrigInjecConv_None: Injected conversion started by software and not
 796:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *                                          by external trigger (for ADC1, ADC2 and ADC3)
 797:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 798:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 799:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
 800:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1310              		.loc 1 800 0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 16
 1313              		@ frame_needed = 1, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
 1315 0664 80B4     		push	{r7}
 1316              	.LCFI59:
 1317              		.cfi_def_cfa_offset 4
 1318              		.cfi_offset 7, -4
 1319 0666 85B0     		sub	sp, sp, #20
 1320              	.LCFI60:
 1321              		.cfi_def_cfa_offset 24
 1322 0668 00AF     		add	r7, sp, #0
 1323              	.LCFI61:
 1324              		.cfi_def_cfa_register 7
 1325 066a 7860     		str	r0, [r7, #4]
 1326 066c 3960     		str	r1, [r7, #0]
 801:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1327              		.loc 1 801 0
 1328 066e 4FF00003 		mov	r3, #0
 1329 0672 FB60     		str	r3, [r7, #12]
 802:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 803:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 804:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
 805:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 806:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR2;
 1330              		.loc 1 806 0
 1331 0674 7B68     		ldr	r3, [r7, #4]
 1332 0676 9B68     		ldr	r3, [r3, #8]
 1333 0678 FB60     		str	r3, [r7, #12]
 807:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old external event selection for injected group */
 808:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR2_JEXTSEL_Reset;
 1334              		.loc 1 808 0
 1335 067a FB68     		ldr	r3, [r7, #12]
 1336 067c 23F4E043 		bic	r3, r3, #28672
 1337 0680 FB60     		str	r3, [r7, #12]
 809:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the external event selection for injected group */
 810:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 1338              		.loc 1 810 0
 1339 0682 FA68     		ldr	r2, [r7, #12]
 1340 0684 3B68     		ldr	r3, [r7, #0]
 1341 0686 1343     		orrs	r3, r3, r2
 1342 0688 FB60     		str	r3, [r7, #12]
 811:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 812:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR2 = tmpreg;
 1343              		.loc 1 812 0
 1344 068a 7B68     		ldr	r3, [r7, #4]
 1345 068c FA68     		ldr	r2, [r7, #12]
 1346 068e 9A60     		str	r2, [r3, #8]
 813:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1347              		.loc 1 813 0
 1348 0690 07F11407 		add	r7, r7, #20
 1349 0694 BD46     		mov	sp, r7
 1350 0696 80BC     		pop	{r7}
 1351 0698 7047     		bx	lr
 1352              		.cfi_endproc
 1353              	.LFE49:
 1355 069a 00BF     		.align	2
 1356              		.global	ADC_ExternalTrigInjectedConvCmd
 1357              		.thumb
 1358              		.thumb_func
 1360              	ADC_ExternalTrigInjectedConvCmd:
 1361              	.LFB50:
 814:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 815:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 816:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the ADCx injected channels conversion through
 817:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         external trigger
 818:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 819:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC external trigger start of
 820:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         injected conversion.
 821:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 822:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 823:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 824:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ExternalTrigInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 825:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1362              		.loc 1 825 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 8
 1365              		@ frame_needed = 1, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 1367 069c 80B4     		push	{r7}
 1368              	.LCFI62:
 1369              		.cfi_def_cfa_offset 4
 1370              		.cfi_offset 7, -4
 1371 069e 83B0     		sub	sp, sp, #12
 1372              	.LCFI63:
 1373              		.cfi_def_cfa_offset 16
 1374 06a0 00AF     		add	r7, sp, #0
 1375              	.LCFI64:
 1376              		.cfi_def_cfa_register 7
 1377 06a2 7860     		str	r0, [r7, #4]
 1378 06a4 0B46     		mov	r3, r1
 1379 06a6 FB70     		strb	r3, [r7, #3]
 826:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 827:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 828:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 829:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1380              		.loc 1 829 0
 1381 06a8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1382 06aa 002B     		cmp	r3, #0
 1383 06ac 06D0     		beq	.L64
 830:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 831:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC external event selection for injected group */
 832:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_Set;
 1384              		.loc 1 832 0
 1385 06ae 7B68     		ldr	r3, [r7, #4]
 1386 06b0 9B68     		ldr	r3, [r3, #8]
 1387 06b2 43F40042 		orr	r2, r3, #32768
 1388 06b6 7B68     		ldr	r3, [r7, #4]
 1389 06b8 9A60     		str	r2, [r3, #8]
 1390 06ba 05E0     		b	.L63
 1391              	.L64:
 833:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 834:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 835:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 836:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC external event selection for injected group */
 837:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_Reset;
 1392              		.loc 1 837 0
 1393 06bc 7B68     		ldr	r3, [r7, #4]
 1394 06be 9B68     		ldr	r3, [r3, #8]
 1395 06c0 23F40042 		bic	r2, r3, #32768
 1396 06c4 7B68     		ldr	r3, [r7, #4]
 1397 06c6 9A60     		str	r2, [r3, #8]
 1398              	.L63:
 838:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 839:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1399              		.loc 1 839 0
 1400 06c8 07F10C07 		add	r7, r7, #12
 1401 06cc BD46     		mov	sp, r7
 1402 06ce 80BC     		pop	{r7}
 1403 06d0 7047     		bx	lr
 1404              		.cfi_endproc
 1405              	.LFE50:
 1407 06d2 00BF     		.align	2
 1408              		.global	ADC_SoftwareStartInjectedConvCmd
 1409              		.thumb
 1410              		.thumb_func
 1412              	ADC_SoftwareStartInjectedConvCmd:
 1413              	.LFB51:
 840:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 841:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 842:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the selected ADC start of the injected 
 843:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         channels conversion.
 844:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 845:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the selected ADC software start injected conversion.
 846:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
 847:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 848:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 849:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SoftwareStartInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 850:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1414              		.loc 1 850 0
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 8
 1417              		@ frame_needed = 1, uses_anonymous_args = 0
 1418              		@ link register save eliminated.
 1419 06d4 80B4     		push	{r7}
 1420              	.LCFI65:
 1421              		.cfi_def_cfa_offset 4
 1422              		.cfi_offset 7, -4
 1423 06d6 83B0     		sub	sp, sp, #12
 1424              	.LCFI66:
 1425              		.cfi_def_cfa_offset 16
 1426 06d8 00AF     		add	r7, sp, #0
 1427              	.LCFI67:
 1428              		.cfi_def_cfa_register 7
 1429 06da 7860     		str	r0, [r7, #4]
 1430 06dc 0B46     		mov	r3, r1
 1431 06de FB70     		strb	r3, [r7, #3]
 851:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 852:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 853:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 854:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 1432              		.loc 1 854 0
 1433 06e0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1434 06e2 002B     		cmp	r3, #0
 1435 06e4 06D0     		beq	.L67
 855:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 856:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the selected ADC conversion for injected group on external event and start the select
 857:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC injected conversion */
 858:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 |= CR2_JEXTTRIG_JSWSTART_Set;
 1436              		.loc 1 858 0
 1437 06e6 7B68     		ldr	r3, [r7, #4]
 1438 06e8 9B68     		ldr	r3, [r3, #8]
 1439 06ea 43F40212 		orr	r2, r3, #2129920
 1440 06ee 7B68     		ldr	r3, [r7, #4]
 1441 06f0 9A60     		str	r2, [r3, #8]
 1442 06f2 05E0     		b	.L66
 1443              	.L67:
 859:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 860:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 861:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 862:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the selected ADC conversion on external event for injected group and stop the select
 863:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****        ADC injected conversion */
 864:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->CR2 &= CR2_JEXTTRIG_JSWSTART_Reset;
 1444              		.loc 1 864 0
 1445 06f4 7B68     		ldr	r3, [r7, #4]
 1446 06f6 9B68     		ldr	r3, [r3, #8]
 1447 06f8 23F40212 		bic	r2, r3, #2129920
 1448 06fc 7B68     		ldr	r3, [r7, #4]
 1449 06fe 9A60     		str	r2, [r3, #8]
 1450              	.L66:
 865:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 866:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1451              		.loc 1 866 0
 1452 0700 07F10C07 		add	r7, r7, #12
 1453 0704 BD46     		mov	sp, r7
 1454 0706 80BC     		pop	{r7}
 1455 0708 7047     		bx	lr
 1456              		.cfi_endproc
 1457              	.LFE51:
 1459 070a 00BF     		.align	2
 1460              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 1461              		.thumb
 1462              		.thumb_func
 1464              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 1465              	.LFB52:
 867:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 868:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 869:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
 870:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 871:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
 872:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 873:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
 874:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1466              		.loc 1 874 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 16
 1469              		@ frame_needed = 1, uses_anonymous_args = 0
 1470              		@ link register save eliminated.
 1471 070c 80B4     		push	{r7}
 1472              	.LCFI68:
 1473              		.cfi_def_cfa_offset 4
 1474              		.cfi_offset 7, -4
 1475 070e 85B0     		sub	sp, sp, #20
 1476              	.LCFI69:
 1477              		.cfi_def_cfa_offset 24
 1478 0710 00AF     		add	r7, sp, #0
 1479              	.LCFI70:
 1480              		.cfi_def_cfa_register 7
 1481 0712 7860     		str	r0, [r7, #4]
 875:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 1482              		.loc 1 875 0
 1483 0714 4FF00003 		mov	r3, #0
 1484 0718 FB73     		strb	r3, [r7, #15]
 876:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 877:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 878:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of JSWSTART bit */
 879:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->CR2 & CR2_JSWSTART_Set) != (uint32_t)RESET)
 1485              		.loc 1 879 0
 1486 071a 7B68     		ldr	r3, [r7, #4]
 1487 071c 9B68     		ldr	r3, [r3, #8]
 1488 071e 03F40013 		and	r3, r3, #2097152
 1489 0722 002B     		cmp	r3, #0
 1490 0724 03D0     		beq	.L70
 880:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 881:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* JSWSTART bit is set */
 882:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 1491              		.loc 1 882 0
 1492 0726 4FF00103 		mov	r3, #1
 1493 072a FB73     		strb	r3, [r7, #15]
 1494 072c 02E0     		b	.L71
 1495              	.L70:
 883:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 884:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
 885:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 886:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* JSWSTART bit is reset */
 887:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 1496              		.loc 1 887 0
 1497 072e 4FF00003 		mov	r3, #0
 1498 0732 FB73     		strb	r3, [r7, #15]
 1499              	.L71:
 888:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 889:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the JSWSTART bit status */
 890:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 1500              		.loc 1 890 0
 1501 0734 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 891:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1502              		.loc 1 891 0
 1503 0736 1846     		mov	r0, r3
 1504 0738 07F11407 		add	r7, r7, #20
 1505 073c BD46     		mov	sp, r7
 1506 073e 80BC     		pop	{r7}
 1507 0740 7047     		bx	lr
 1508              		.cfi_endproc
 1509              	.LFE52:
 1511 0742 00BF     		.align	2
 1512              		.global	ADC_InjectedChannelConfig
 1513              		.thumb
 1514              		.thumb_func
 1516              	ADC_InjectedChannelConfig:
 1517              	.LFB53:
 892:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 893:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 894:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
 895:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         rank in the sequencer and its sample time.
 896:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 897:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 898:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 899:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 900:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 901:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 902:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 903:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 904:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 905:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 906:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 907:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 908:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 909:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 910:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 911:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 912:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 913:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 914:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 915:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 916:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 917:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Rank: The rank in the injected group sequencer. This parameter must be between 1 and 4.
 918:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 919:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
 920:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_1Cycles5: Sample time equal to 1.5 cycles
 921:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_7Cycles5: Sample time equal to 7.5 cycles
 922:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_13Cycles5: Sample time equal to 13.5 cycles
 923:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_28Cycles5: Sample time equal to 28.5 cycles	
 924:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_41Cycles5: Sample time equal to 41.5 cycles	
 925:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_55Cycles5: Sample time equal to 55.5 cycles	
 926:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_71Cycles5: Sample time equal to 71.5 cycles	
 927:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_SampleTime_239Cycles5: Sample time equal to 239.5 cycles	
 928:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 929:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 930:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
 931:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1518              		.loc 1 931 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 24
 1521              		@ frame_needed = 1, uses_anonymous_args = 0
 1522              		@ link register save eliminated.
 1523 0744 80B4     		push	{r7}
 1524              	.LCFI71:
 1525              		.cfi_def_cfa_offset 4
 1526              		.cfi_offset 7, -4
 1527 0746 87B0     		sub	sp, sp, #28
 1528              	.LCFI72:
 1529              		.cfi_def_cfa_offset 32
 1530 0748 00AF     		add	r7, sp, #0
 1531              	.LCFI73:
 1532              		.cfi_def_cfa_register 7
 1533 074a 7860     		str	r0, [r7, #4]
 1534 074c F970     		strb	r1, [r7, #3]
 1535 074e BA70     		strb	r2, [r7, #2]
 1536 0750 7B70     		strb	r3, [r7, #1]
 932:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
 1537              		.loc 1 932 0
 1538 0752 4FF00003 		mov	r3, #0
 1539 0756 7B61     		str	r3, [r7, #20]
 1540 0758 4FF00003 		mov	r3, #0
 1541 075c 3B61     		str	r3, [r7, #16]
 1542 075e 4FF00003 		mov	r3, #0
 1543 0762 FB60     		str	r3, [r7, #12]
 933:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 934:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 935:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 936:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
 937:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 938:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_17 is selected */
 939:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 1544              		.loc 1 939 0
 1545 0764 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1546 0766 092B     		cmp	r3, #9
 1547 0768 27D9     		bls	.L74
 940:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 941:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 942:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR1;
 1548              		.loc 1 942 0
 1549 076a 7B68     		ldr	r3, [r7, #4]
 1550 076c DB68     		ldr	r3, [r3, #12]
 1551 076e 7B61     		str	r3, [r7, #20]
 943:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 944:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR1_SMP_Set << (3*(ADC_Channel - 10));
 1552              		.loc 1 944 0
 1553 0770 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1554 0772 1346     		mov	r3, r2
 1555 0774 4FEA4303 		lsl	r3, r3, #1
 1556 0778 9B18     		adds	r3, r3, r2
 1557 077a A3F11E03 		sub	r3, r3, #30
 1558 077e 4FF00702 		mov	r2, #7
 1559 0782 02FA03F3 		lsl	r3, r2, r3
 1560 0786 3B61     		str	r3, [r7, #16]
 945:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 946:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1561              		.loc 1 946 0
 1562 0788 3B69     		ldr	r3, [r7, #16]
 1563 078a 6FEA0303 		mvn	r3, r3
 1564 078e 7A69     		ldr	r2, [r7, #20]
 1565 0790 1340     		ands	r3, r3, r2
 1566 0792 7B61     		str	r3, [r7, #20]
 947:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 948:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 1567              		.loc 1 948 0
 1568 0794 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1569 0796 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1570 0798 1346     		mov	r3, r2
 1571 079a 4FEA4303 		lsl	r3, r3, #1
 1572 079e 9B18     		adds	r3, r3, r2
 1573 07a0 A3F11E03 		sub	r3, r3, #30
 1574 07a4 01FA03F3 		lsl	r3, r1, r3
 1575 07a8 3B61     		str	r3, [r7, #16]
 949:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 950:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1576              		.loc 1 950 0
 1577 07aa 7A69     		ldr	r2, [r7, #20]
 1578 07ac 3B69     		ldr	r3, [r7, #16]
 1579 07ae 1343     		orrs	r3, r3, r2
 1580 07b0 7B61     		str	r3, [r7, #20]
 951:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 952:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR1 = tmpreg1;
 1581              		.loc 1 952 0
 1582 07b2 7B68     		ldr	r3, [r7, #4]
 1583 07b4 7A69     		ldr	r2, [r7, #20]
 1584 07b6 DA60     		str	r2, [r3, #12]
 1585 07b8 22E0     		b	.L75
 1586              	.L74:
 953:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 954:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 955:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
 956:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Get the old register value */
 957:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 = ADCx->SMPR2;
 1587              		.loc 1 957 0
 1588 07ba 7B68     		ldr	r3, [r7, #4]
 1589 07bc 1B69     		ldr	r3, [r3, #16]
 1590 07be 7B61     		str	r3, [r7, #20]
 958:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to clear */
 959:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = SMPR2_SMP_Set << (3 * ADC_Channel);
 1591              		.loc 1 959 0
 1592 07c0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1593 07c2 1346     		mov	r3, r2
 1594 07c4 4FEA4303 		lsl	r3, r3, #1
 1595 07c8 9B18     		adds	r3, r3, r2
 1596 07ca 4FF00702 		mov	r2, #7
 1597 07ce 02FA03F3 		lsl	r3, r2, r3
 1598 07d2 3B61     		str	r3, [r7, #16]
 960:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Clear the old channel sample time */
 961:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 &= ~tmpreg2;
 1599              		.loc 1 961 0
 1600 07d4 3B69     		ldr	r3, [r7, #16]
 1601 07d6 6FEA0303 		mvn	r3, r3
 1602 07da 7A69     		ldr	r2, [r7, #20]
 1603 07dc 1340     		ands	r3, r3, r2
 1604 07de 7B61     		str	r3, [r7, #20]
 962:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Calculate the mask to set */
 963:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 1605              		.loc 1 963 0
 1606 07e0 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1607 07e2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1608 07e4 1346     		mov	r3, r2
 1609 07e6 4FEA4303 		lsl	r3, r3, #1
 1610 07ea 9B18     		adds	r3, r3, r2
 1611 07ec 01FA03F3 		lsl	r3, r1, r3
 1612 07f0 3B61     		str	r3, [r7, #16]
 964:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Set the new channel sample time */
 965:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     tmpreg1 |= tmpreg2;
 1613              		.loc 1 965 0
 1614 07f2 7A69     		ldr	r2, [r7, #20]
 1615 07f4 3B69     		ldr	r3, [r7, #16]
 1616 07f6 1343     		orrs	r3, r3, r2
 1617 07f8 7B61     		str	r3, [r7, #20]
 966:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Store the new register value */
 967:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADCx->SMPR2 = tmpreg1;
 1618              		.loc 1 967 0
 1619 07fa 7B68     		ldr	r3, [r7, #4]
 1620 07fc 7A69     		ldr	r2, [r7, #20]
 1621 07fe 1A61     		str	r2, [r3, #16]
 1622              	.L75:
 968:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
 969:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Rank configuration */
 970:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
 971:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1623              		.loc 1 971 0
 1624 0800 7B68     		ldr	r3, [r7, #4]
 1625 0802 9B6B     		ldr	r3, [r3, #56]
 1626 0804 7B61     		str	r3, [r7, #20]
 972:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get JL value: Number = JL+1 */
 973:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_Set)>> 20;
 1627              		.loc 1 973 0
 1628 0806 7B69     		ldr	r3, [r7, #20]
 1629 0808 03F44013 		and	r3, r3, #3145728
 1630 080c 4FEA1353 		lsr	r3, r3, #20
 1631 0810 FB60     		str	r3, [r7, #12]
 974:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
 975:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = JSQR_JSQ_Set << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1632              		.loc 1 975 0
 1633 0812 FB68     		ldr	r3, [r7, #12]
 1634 0814 DBB2     		uxtb	r3, r3
 1635 0816 6FEA0303 		mvn	r3, r3
 1636 081a DAB2     		uxtb	r2, r3
 1637 081c BB78     		ldrb	r3, [r7, #2]
 1638 081e D318     		adds	r3, r2, r3
 1639 0820 DBB2     		uxtb	r3, r3
 1640 0822 03F10303 		add	r3, r3, #3
 1641 0826 DBB2     		uxtb	r3, r3
 1642 0828 1A46     		mov	r2, r3
 1643 082a 1346     		mov	r3, r2
 1644 082c 4FEA8303 		lsl	r3, r3, #2
 1645 0830 9B18     		adds	r3, r3, r2
 1646 0832 4FF01F02 		mov	r2, #31
 1647 0836 02FA03F3 		lsl	r3, r2, r3
 1648 083a 3B61     		str	r3, [r7, #16]
 976:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old JSQx bits for the selected rank */
 977:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= ~tmpreg2;
 1649              		.loc 1 977 0
 1650 083c 3B69     		ldr	r3, [r7, #16]
 1651 083e 6FEA0303 		mvn	r3, r3
 1652 0842 7A69     		ldr	r2, [r7, #20]
 1653 0844 1340     		ands	r3, r3, r2
 1654 0846 7B61     		str	r3, [r7, #20]
 978:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
 979:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1655              		.loc 1 979 0
 1656 0848 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1657 084a FB68     		ldr	r3, [r7, #12]
 1658 084c DBB2     		uxtb	r3, r3
 1659 084e 6FEA0303 		mvn	r3, r3
 1660 0852 DAB2     		uxtb	r2, r3
 1661 0854 BB78     		ldrb	r3, [r7, #2]
 1662 0856 D318     		adds	r3, r2, r3
 1663 0858 DBB2     		uxtb	r3, r3
 1664 085a 03F10303 		add	r3, r3, #3
 1665 085e DBB2     		uxtb	r3, r3
 1666 0860 1A46     		mov	r2, r3
 1667 0862 1346     		mov	r3, r2
 1668 0864 4FEA8303 		lsl	r3, r3, #2
 1669 0868 9B18     		adds	r3, r3, r2
 1670 086a 01FA03F3 		lsl	r3, r1, r3
 1671 086e 3B61     		str	r3, [r7, #16]
 980:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the JSQx bits for the selected rank */
 981:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2;
 1672              		.loc 1 981 0
 1673 0870 7A69     		ldr	r2, [r7, #20]
 1674 0872 3B69     		ldr	r3, [r7, #16]
 1675 0874 1343     		orrs	r3, r3, r2
 1676 0876 7B61     		str	r3, [r7, #20]
 982:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
 983:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1677              		.loc 1 983 0
 1678 0878 7B68     		ldr	r3, [r7, #4]
 1679 087a 7A69     		ldr	r2, [r7, #20]
 1680 087c 9A63     		str	r2, [r3, #56]
 984:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1681              		.loc 1 984 0
 1682 087e 07F11C07 		add	r7, r7, #28
 1683 0882 BD46     		mov	sp, r7
 1684 0884 80BC     		pop	{r7}
 1685 0886 7047     		bx	lr
 1686              		.cfi_endproc
 1687              	.LFE53:
 1689              		.align	2
 1690              		.global	ADC_InjectedSequencerLengthConfig
 1691              		.thumb
 1692              		.thumb_func
 1694              	ADC_InjectedSequencerLengthConfig:
 1695              	.LFB54:
 985:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
 986:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
 987:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the sequencer length for injected channels
 988:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 989:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Length: The sequencer length. 
 990:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a number between 1 to 4.
 991:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
 992:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
 993:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
 994:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1696              		.loc 1 994 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 16
 1699              		@ frame_needed = 1, uses_anonymous_args = 0
 1700              		@ link register save eliminated.
 1701 0888 80B4     		push	{r7}
 1702              	.LCFI74:
 1703              		.cfi_def_cfa_offset 4
 1704              		.cfi_offset 7, -4
 1705 088a 85B0     		sub	sp, sp, #20
 1706              	.LCFI75:
 1707              		.cfi_def_cfa_offset 24
 1708 088c 00AF     		add	r7, sp, #0
 1709              	.LCFI76:
 1710              		.cfi_def_cfa_register 7
 1711 088e 7860     		str	r0, [r7, #4]
 1712 0890 0B46     		mov	r3, r1
 1713 0892 FB70     		strb	r3, [r7, #3]
 995:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg1 = 0;
 1714              		.loc 1 995 0
 1715 0894 4FF00003 		mov	r3, #0
 1716 0898 FB60     		str	r3, [r7, #12]
 996:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg2 = 0;
 1717              		.loc 1 996 0
 1718 089a 4FF00003 		mov	r3, #0
 1719 089e BB60     		str	r3, [r7, #8]
 997:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
 998:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 999:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
1000:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1001:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1002:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 = ADCx->JSQR;
 1720              		.loc 1 1002 0
 1721 08a0 7B68     		ldr	r3, [r7, #4]
 1722 08a2 9B6B     		ldr	r3, [r3, #56]
 1723 08a4 FB60     		str	r3, [r7, #12]
1003:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the old injected sequnence lenght JL bits */
1004:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 &= JSQR_JL_Reset;
 1724              		.loc 1 1004 0
 1725 08a6 FB68     		ldr	r3, [r7, #12]
 1726 08a8 23F44013 		bic	r3, r3, #3145728
 1727 08ac FB60     		str	r3, [r7, #12]
1005:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the injected sequnence lenght JL bits */
1006:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg2 = Length - 1; 
 1728              		.loc 1 1006 0
 1729 08ae FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1730 08b0 03F1FF33 		add	r3, r3, #-1
 1731 08b4 BB60     		str	r3, [r7, #8]
1007:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 1732              		.loc 1 1007 0
 1733 08b6 BB68     		ldr	r3, [r7, #8]
 1734 08b8 4FEA0353 		lsl	r3, r3, #20
 1735 08bc FA68     		ldr	r2, [r7, #12]
 1736 08be 1343     		orrs	r3, r3, r2
 1737 08c0 FB60     		str	r3, [r7, #12]
1008:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1009:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->JSQR = tmpreg1;
 1738              		.loc 1 1009 0
 1739 08c2 7B68     		ldr	r3, [r7, #4]
 1740 08c4 FA68     		ldr	r2, [r7, #12]
 1741 08c6 9A63     		str	r2, [r3, #56]
1010:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1742              		.loc 1 1010 0
 1743 08c8 07F11407 		add	r7, r7, #20
 1744 08cc BD46     		mov	sp, r7
 1745 08ce 80BC     		pop	{r7}
 1746 08d0 7047     		bx	lr
 1747              		.cfi_endproc
 1748              	.LFE54:
 1750 08d2 00BF     		.align	2
 1751              		.global	ADC_SetInjectedOffset
 1752              		.thumb
 1753              		.thumb_func
 1755              	ADC_SetInjectedOffset:
 1756              	.LFB55:
1011:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1012:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1013:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Set the injected channels conversion value offset
1014:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1015:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1016:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1017:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1018:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1019:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1020:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1021:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1022:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1023:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1024:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1025:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1026:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1757              		.loc 1 1026 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 16
 1760              		@ frame_needed = 1, uses_anonymous_args = 0
 1761              		@ link register save eliminated.
 1762 08d4 80B4     		push	{r7}
 1763              	.LCFI77:
 1764              		.cfi_def_cfa_offset 4
 1765              		.cfi_offset 7, -4
 1766 08d6 85B0     		sub	sp, sp, #20
 1767              	.LCFI78:
 1768              		.cfi_def_cfa_offset 24
 1769 08d8 00AF     		add	r7, sp, #0
 1770              	.LCFI79:
 1771              		.cfi_def_cfa_register 7
 1772 08da 7860     		str	r0, [r7, #4]
 1773 08dc 1346     		mov	r3, r2
 1774 08de 0A46     		mov	r2, r1
 1775 08e0 FA70     		strb	r2, [r7, #3]
 1776 08e2 3B80     		strh	r3, [r7, #0]	@ movhi
1027:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1777              		.loc 1 1027 0
 1778 08e4 4FF00003 		mov	r3, #0
 1779 08e8 FB60     		str	r3, [r7, #12]
1028:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1029:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1030:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1031:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1032:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));  
1033:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1034:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1780              		.loc 1 1034 0
 1781 08ea 7B68     		ldr	r3, [r7, #4]
 1782 08ec FB60     		str	r3, [r7, #12]
1035:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel;
 1783              		.loc 1 1035 0
 1784 08ee FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1785 08f0 FB68     		ldr	r3, [r7, #12]
 1786 08f2 D318     		adds	r3, r2, r3
 1787 08f4 FB60     		str	r3, [r7, #12]
1036:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1037:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the selected injected channel data offset */
1038:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *(__IO uint32_t *) tmp = (uint32_t)Offset;
 1788              		.loc 1 1038 0
 1789 08f6 FB68     		ldr	r3, [r7, #12]
 1790 08f8 3A88     		ldrh	r2, [r7, #0]
 1791 08fa 1A60     		str	r2, [r3, #0]
1039:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1792              		.loc 1 1039 0
 1793 08fc 07F11407 		add	r7, r7, #20
 1794 0900 BD46     		mov	sp, r7
 1795 0902 80BC     		pop	{r7}
 1796 0904 7047     		bx	lr
 1797              		.cfi_endproc
 1798              	.LFE55:
 1800 0906 00BF     		.align	2
 1801              		.global	ADC_GetInjectedConversionValue
 1802              		.thumb
 1803              		.thumb_func
 1805              	ADC_GetInjectedConversionValue:
 1806              	.LFB56:
1040:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1041:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1042:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1043:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1044:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1045:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1046:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_1: Injected Channel1 selected
1047:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_2: Injected Channel2 selected
1048:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_3: Injected Channel3 selected
1049:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_InjectedChannel_4: Injected Channel4 selected
1050:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The Data conversion value.
1051:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1052:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1053:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1807              		.loc 1 1053 0
 1808              		.cfi_startproc
 1809              		@ args = 0, pretend = 0, frame = 16
 1810              		@ frame_needed = 1, uses_anonymous_args = 0
 1811              		@ link register save eliminated.
 1812 0908 80B4     		push	{r7}
 1813              	.LCFI80:
 1814              		.cfi_def_cfa_offset 4
 1815              		.cfi_offset 7, -4
 1816 090a 85B0     		sub	sp, sp, #20
 1817              	.LCFI81:
 1818              		.cfi_def_cfa_offset 24
 1819 090c 00AF     		add	r7, sp, #0
 1820              	.LCFI82:
 1821              		.cfi_def_cfa_register 7
 1822 090e 7860     		str	r0, [r7, #4]
 1823 0910 0B46     		mov	r3, r1
 1824 0912 FB70     		strb	r3, [r7, #3]
1054:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   __IO uint32_t tmp = 0;
 1825              		.loc 1 1054 0
 1826 0914 4FF00003 		mov	r3, #0
 1827 0918 FB60     		str	r3, [r7, #12]
1055:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1056:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1057:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1058:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1059:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1060:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp = (uint32_t)ADCx;
 1828              		.loc 1 1060 0
 1829 091a 7B68     		ldr	r3, [r7, #4]
 1830 091c FB60     		str	r3, [r7, #12]
1061:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmp += ADC_InjectedChannel + JDR_Offset;
 1831              		.loc 1 1061 0
 1832 091e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1833 0920 FB68     		ldr	r3, [r7, #12]
 1834 0922 D318     		adds	r3, r2, r3
 1835 0924 03F12803 		add	r3, r3, #40
 1836 0928 FB60     		str	r3, [r7, #12]
1062:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   
1063:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Returns the selected injected channel conversion data value */
1064:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp);   
 1837              		.loc 1 1064 0
 1838 092a FB68     		ldr	r3, [r7, #12]
 1839 092c 1B68     		ldr	r3, [r3, #0]
 1840 092e 9BB2     		uxth	r3, r3
1065:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1841              		.loc 1 1065 0
 1842 0930 1846     		mov	r0, r3
 1843 0932 07F11407 		add	r7, r7, #20
 1844 0936 BD46     		mov	sp, r7
 1845 0938 80BC     		pop	{r7}
 1846 093a 7047     		bx	lr
 1847              		.cfi_endproc
 1848              	.LFE56:
 1850              		.align	2
 1851              		.global	ADC_AnalogWatchdogCmd
 1852              		.thumb
 1853              		.thumb_func
 1855              	ADC_AnalogWatchdogCmd:
 1856              	.LFB57:
1066:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1067:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1068:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular
1069:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *         or injected channels
1070:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1071:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
1072:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1073:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
1074:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected channel
1075:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular or inje
1076:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on  all regular channel
1077:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on  all injected channel
1078:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and injected c
1079:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
1080:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None	  
1081:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1082:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
1083:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1857              		.loc 1 1083 0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 16
 1860              		@ frame_needed = 1, uses_anonymous_args = 0
 1861              		@ link register save eliminated.
 1862 093c 80B4     		push	{r7}
 1863              	.LCFI83:
 1864              		.cfi_def_cfa_offset 4
 1865              		.cfi_offset 7, -4
 1866 093e 85B0     		sub	sp, sp, #20
 1867              	.LCFI84:
 1868              		.cfi_def_cfa_offset 24
 1869 0940 00AF     		add	r7, sp, #0
 1870              	.LCFI85:
 1871              		.cfi_def_cfa_register 7
 1872 0942 7860     		str	r0, [r7, #4]
 1873 0944 3960     		str	r1, [r7, #0]
1084:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1874              		.loc 1 1084 0
 1875 0946 4FF00003 		mov	r3, #0
 1876 094a FB60     		str	r3, [r7, #12]
1085:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1086:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1087:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
1088:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1089:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1877              		.loc 1 1089 0
 1878 094c 7B68     		ldr	r3, [r7, #4]
 1879 094e 5B68     		ldr	r3, [r3, #4]
 1880 0950 FB60     		str	r3, [r7, #12]
1090:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear AWDEN, AWDENJ and AWDSGL bits */
1091:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDMode_Reset;
 1881              		.loc 1 1091 0
 1882 0952 FB68     		ldr	r3, [r7, #12]
 1883 0954 23F44003 		bic	r3, r3, #12582912
 1884 0958 23F40073 		bic	r3, r3, #512
 1885 095c FB60     		str	r3, [r7, #12]
1092:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the analog watchdog enable mode */
1093:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 1886              		.loc 1 1093 0
 1887 095e FA68     		ldr	r2, [r7, #12]
 1888 0960 3B68     		ldr	r3, [r7, #0]
 1889 0962 1343     		orrs	r3, r3, r2
 1890 0964 FB60     		str	r3, [r7, #12]
1094:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1095:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 1891              		.loc 1 1095 0
 1892 0966 7B68     		ldr	r3, [r7, #4]
 1893 0968 FA68     		ldr	r2, [r7, #12]
 1894 096a 5A60     		str	r2, [r3, #4]
1096:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1895              		.loc 1 1096 0
 1896 096c 07F11407 		add	r7, r7, #20
 1897 0970 BD46     		mov	sp, r7
 1898 0972 80BC     		pop	{r7}
 1899 0974 7047     		bx	lr
 1900              		.cfi_endproc
 1901              	.LFE57:
 1903 0976 00BF     		.align	2
 1904              		.global	ADC_AnalogWatchdogThresholdsConfig
 1905              		.thumb
 1906              		.thumb_func
 1908              	ADC_AnalogWatchdogThresholdsConfig:
 1909              	.LFB58:
1097:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1098:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1099:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
1100:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1101:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
1102:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1103:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  LowThreshold: the ADC analog watchdog Low threshold value.
1104:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter must be a 12bit value.
1105:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1106:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1107:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
1108:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****                                         uint16_t LowThreshold)
1109:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1910              		.loc 1 1109 0
 1911              		.cfi_startproc
 1912              		@ args = 0, pretend = 0, frame = 8
 1913              		@ frame_needed = 1, uses_anonymous_args = 0
 1914              		@ link register save eliminated.
 1915 0978 80B4     		push	{r7}
 1916              	.LCFI86:
 1917              		.cfi_def_cfa_offset 4
 1918              		.cfi_offset 7, -4
 1919 097a 83B0     		sub	sp, sp, #12
 1920              	.LCFI87:
 1921              		.cfi_def_cfa_offset 16
 1922 097c 00AF     		add	r7, sp, #0
 1923              	.LCFI88:
 1924              		.cfi_def_cfa_register 7
 1925 097e 7860     		str	r0, [r7, #4]
 1926 0980 1346     		mov	r3, r2
 1927 0982 0A46     		mov	r2, r1	@ movhi
 1928 0984 7A80     		strh	r2, [r7, #2]	@ movhi
 1929 0986 3B80     		strh	r3, [r7, #0]	@ movhi
1110:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1111:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1112:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
1113:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
1114:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the ADCx high threshold */
1115:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->HTR = HighThreshold;
 1930              		.loc 1 1115 0
 1931 0988 7A88     		ldrh	r2, [r7, #2]
 1932 098a 7B68     		ldr	r3, [r7, #4]
 1933 098c 5A62     		str	r2, [r3, #36]
1116:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the ADCx low threshold */
1117:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->LTR = LowThreshold;
 1934              		.loc 1 1117 0
 1935 098e 3A88     		ldrh	r2, [r7, #0]
 1936 0990 7B68     		ldr	r3, [r7, #4]
 1937 0992 9A62     		str	r2, [r3, #40]
1118:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1938              		.loc 1 1118 0
 1939 0994 07F10C07 		add	r7, r7, #12
 1940 0998 BD46     		mov	sp, r7
 1941 099a 80BC     		pop	{r7}
 1942 099c 7047     		bx	lr
 1943              		.cfi_endproc
 1944              	.LFE58:
 1946 099e 00BF     		.align	2
 1947              		.global	ADC_AnalogWatchdogSingleChannelConfig
 1948              		.thumb
 1949              		.thumb_func
 1951              	ADC_AnalogWatchdogSingleChannelConfig:
 1952              	.LFB59:
1119:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1120:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1121:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
1122:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1123:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
1124:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1125:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
1126:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
1127:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
1128:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
1129:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
1130:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
1131:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
1132:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
1133:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
1134:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
1135:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
1136:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
1137:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
1138:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
1139:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
1140:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
1141:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
1142:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
1143:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1144:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1145:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
1146:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 1953              		.loc 1 1146 0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 16
 1956              		@ frame_needed = 1, uses_anonymous_args = 0
 1957              		@ link register save eliminated.
 1958 09a0 80B4     		push	{r7}
 1959              	.LCFI89:
 1960              		.cfi_def_cfa_offset 4
 1961              		.cfi_offset 7, -4
 1962 09a2 85B0     		sub	sp, sp, #20
 1963              	.LCFI90:
 1964              		.cfi_def_cfa_offset 24
 1965 09a4 00AF     		add	r7, sp, #0
 1966              	.LCFI91:
 1967              		.cfi_def_cfa_register 7
 1968 09a6 7860     		str	r0, [r7, #4]
 1969 09a8 0B46     		mov	r3, r1
 1970 09aa FB70     		strb	r3, [r7, #3]
1147:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t tmpreg = 0;
 1971              		.loc 1 1147 0
 1972 09ac 4FF00003 		mov	r3, #0
 1973 09b0 FB60     		str	r3, [r7, #12]
1148:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1149:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1150:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
1151:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the old register value */
1152:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg = ADCx->CR1;
 1974              		.loc 1 1152 0
 1975 09b2 7B68     		ldr	r3, [r7, #4]
 1976 09b4 5B68     		ldr	r3, [r3, #4]
 1977 09b6 FB60     		str	r3, [r7, #12]
1153:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the Analog watchdog channel select bits */
1154:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg &= CR1_AWDCH_Reset;
 1978              		.loc 1 1154 0
 1979 09b8 FB68     		ldr	r3, [r7, #12]
 1980 09ba 23F01F03 		bic	r3, r3, #31
 1981 09be FB60     		str	r3, [r7, #12]
1155:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Set the Analog watchdog channel */
1156:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   tmpreg |= ADC_Channel;
 1982              		.loc 1 1156 0
 1983 09c0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1984 09c2 FA68     		ldr	r2, [r7, #12]
 1985 09c4 1343     		orrs	r3, r3, r2
 1986 09c6 FB60     		str	r3, [r7, #12]
1157:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Store the new register value */
1158:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->CR1 = tmpreg;
 1987              		.loc 1 1158 0
 1988 09c8 7B68     		ldr	r3, [r7, #4]
 1989 09ca FA68     		ldr	r2, [r7, #12]
 1990 09cc 5A60     		str	r2, [r3, #4]
1159:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 1991              		.loc 1 1159 0
 1992 09ce 07F11407 		add	r7, r7, #20
 1993 09d2 BD46     		mov	sp, r7
 1994 09d4 80BC     		pop	{r7}
 1995 09d6 7047     		bx	lr
 1996              		.cfi_endproc
 1997              	.LFE59:
 1999              		.align	2
 2000              		.global	ADC_TempSensorVrefintCmd
 2001              		.thumb
 2002              		.thumb_func
 2004              	ADC_TempSensorVrefintCmd:
 2005              	.LFB60:
1160:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1161:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1162:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channel.
1163:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  NewState: new state of the temperature sensor.
1164:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be: ENABLE or DISABLE.
1165:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1166:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1167:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)
1168:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2006              		.loc 1 1168 0
 2007              		.cfi_startproc
 2008              		@ args = 0, pretend = 0, frame = 8
 2009              		@ frame_needed = 1, uses_anonymous_args = 0
 2010              		@ link register save eliminated.
 2011 09d8 80B4     		push	{r7}
 2012              	.LCFI92:
 2013              		.cfi_def_cfa_offset 4
 2014              		.cfi_offset 7, -4
 2015 09da 83B0     		sub	sp, sp, #12
 2016              	.LCFI93:
 2017              		.cfi_def_cfa_offset 16
 2018 09dc 00AF     		add	r7, sp, #0
 2019              	.LCFI94:
 2020              		.cfi_def_cfa_register 7
 2021 09de 0346     		mov	r3, r0
 2022 09e0 FB71     		strb	r3, [r7, #7]
1169:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1170:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1171:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (NewState != DISABLE)
 2023              		.loc 1 1171 0
 2024 09e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2025 09e4 002B     		cmp	r3, #0
 2026 09e6 06D0     		beq	.L84
1172:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1173:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
1174:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADC1->CR2 |= CR2_TSVREFE_Set;
 2027              		.loc 1 1174 0
 2028 09e8 084B     		ldr	r3, .L86
 2029 09ea 084A     		ldr	r2, .L86
 2030 09ec 9268     		ldr	r2, [r2, #8]
 2031 09ee 42F40002 		orr	r2, r2, #8388608
 2032 09f2 9A60     		str	r2, [r3, #8]
 2033 09f4 05E0     		b	.L83
 2034              	.L84:
1175:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1176:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1177:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1178:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
1179:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     ADC1->CR2 &= CR2_TSVREFE_Reset;
 2035              		.loc 1 1179 0
 2036 09f6 054B     		ldr	r3, .L86
 2037 09f8 044A     		ldr	r2, .L86
 2038 09fa 9268     		ldr	r2, [r2, #8]
 2039 09fc 22F40002 		bic	r2, r2, #8388608
 2040 0a00 9A60     		str	r2, [r3, #8]
 2041              	.L83:
1180:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1181:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2042              		.loc 1 1181 0
 2043 0a02 07F10C07 		add	r7, r7, #12
 2044 0a06 BD46     		mov	sp, r7
 2045 0a08 80BC     		pop	{r7}
 2046 0a0a 7047     		bx	lr
 2047              	.L87:
 2048              		.align	2
 2049              	.L86:
 2050 0a0c 00240140 		.word	1073816576
 2051              		.cfi_endproc
 2052              	.LFE60:
 2054              		.align	2
 2055              		.global	ADC_GetFlagStatus
 2056              		.thumb
 2057              		.thumb_func
 2059              	ADC_GetFlagStatus:
 2060              	.LFB61:
1182:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1183:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1184:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1185:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1186:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1187:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1188:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1189:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1190:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1191:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1192:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1193:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1194:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1195:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1196:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2061              		.loc 1 1196 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 16
 2064              		@ frame_needed = 1, uses_anonymous_args = 0
 2065              		@ link register save eliminated.
 2066 0a10 80B4     		push	{r7}
 2067              	.LCFI95:
 2068              		.cfi_def_cfa_offset 4
 2069              		.cfi_offset 7, -4
 2070 0a12 85B0     		sub	sp, sp, #20
 2071              	.LCFI96:
 2072              		.cfi_def_cfa_offset 24
 2073 0a14 00AF     		add	r7, sp, #0
 2074              	.LCFI97:
 2075              		.cfi_def_cfa_register 7
 2076 0a16 7860     		str	r0, [r7, #4]
 2077 0a18 0B46     		mov	r3, r1
 2078 0a1a FB70     		strb	r3, [r7, #3]
1197:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   FlagStatus bitstatus = RESET;
 2079              		.loc 1 1197 0
 2080 0a1c 4FF00003 		mov	r3, #0
 2081 0a20 FB73     		strb	r3, [r7, #15]
1198:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1199:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1200:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
1201:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC flag */
1202:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 2082              		.loc 1 1202 0
 2083 0a22 7B68     		ldr	r3, [r7, #4]
 2084 0a24 1A68     		ldr	r2, [r3, #0]
 2085 0a26 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2086 0a28 1340     		ands	r3, r3, r2
 2087 0a2a 002B     		cmp	r3, #0
 2088 0a2c 03D0     		beq	.L89
1203:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1204:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_FLAG is set */
1205:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 2089              		.loc 1 1205 0
 2090 0a2e 4FF00103 		mov	r3, #1
 2091 0a32 FB73     		strb	r3, [r7, #15]
 2092 0a34 02E0     		b	.L90
 2093              	.L89:
1206:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1207:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1208:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1209:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_FLAG is reset */
1210:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2094              		.loc 1 1210 0
 2095 0a36 4FF00003 		mov	r3, #0
 2096 0a3a FB73     		strb	r3, [r7, #15]
 2097              	.L90:
1211:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1212:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the ADC_FLAG status */
1213:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 2098              		.loc 1 1213 0
 2099 0a3c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1214:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2100              		.loc 1 1214 0
 2101 0a3e 1846     		mov	r0, r3
 2102 0a40 07F11407 		add	r7, r7, #20
 2103 0a44 BD46     		mov	sp, r7
 2104 0a46 80BC     		pop	{r7}
 2105 0a48 7047     		bx	lr
 2106              		.cfi_endproc
 2107              	.LFE61:
 2109 0a4a 00BF     		.align	2
 2110              		.global	ADC_ClearFlag
 2111              		.thumb
 2112              		.thumb_func
 2114              	ADC_ClearFlag:
 2115              	.LFB62:
1215:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1216:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1217:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's pending flags.
1218:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1219:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1220:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1221:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1222:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1223:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JEOC: End of injected group conversion flag
1224:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1225:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_FLAG_STRT: Start of regular group conversion flag
1226:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1227:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1228:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1229:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2116              		.loc 1 1229 0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 8
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120              		@ link register save eliminated.
 2121 0a4c 80B4     		push	{r7}
 2122              	.LCFI98:
 2123              		.cfi_def_cfa_offset 4
 2124              		.cfi_offset 7, -4
 2125 0a4e 83B0     		sub	sp, sp, #12
 2126              	.LCFI99:
 2127              		.cfi_def_cfa_offset 16
 2128 0a50 00AF     		add	r7, sp, #0
 2129              	.LCFI100:
 2130              		.cfi_def_cfa_register 7
 2131 0a52 7860     		str	r0, [r7, #4]
 2132 0a54 0B46     		mov	r3, r1
 2133 0a56 FB70     		strb	r3, [r7, #3]
1230:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1231:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1232:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
1233:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the selected ADC flags */
1234:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 2134              		.loc 1 1234 0
 2135 0a58 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2136 0a5a 6FEA0302 		mvn	r2, r3
 2137 0a5e 7B68     		ldr	r3, [r7, #4]
 2138 0a60 1A60     		str	r2, [r3, #0]
1235:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2139              		.loc 1 1235 0
 2140 0a62 07F10C07 		add	r7, r7, #12
 2141 0a66 BD46     		mov	sp, r7
 2142 0a68 80BC     		pop	{r7}
 2143 0a6a 7047     		bx	lr
 2144              		.cfi_endproc
 2145              	.LFE62:
 2147              		.align	2
 2148              		.global	ADC_GetITStatus
 2149              		.thumb
 2150              		.thumb_func
 2152              	ADC_GetITStatus:
 2153              	.LFB63:
1236:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1237:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1238:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1239:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1240:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1241:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be one of the following values:
1242:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1243:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1244:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1245:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1246:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1247:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1248:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2154              		.loc 1 1248 0
 2155              		.cfi_startproc
 2156              		@ args = 0, pretend = 0, frame = 24
 2157              		@ frame_needed = 1, uses_anonymous_args = 0
 2158              		@ link register save eliminated.
 2159 0a6c 80B4     		push	{r7}
 2160              	.LCFI101:
 2161              		.cfi_def_cfa_offset 4
 2162              		.cfi_offset 7, -4
 2163 0a6e 87B0     		sub	sp, sp, #28
 2164              	.LCFI102:
 2165              		.cfi_def_cfa_offset 32
 2166 0a70 00AF     		add	r7, sp, #0
 2167              	.LCFI103:
 2168              		.cfi_def_cfa_register 7
 2169 0a72 7860     		str	r0, [r7, #4]
 2170 0a74 0B46     		mov	r3, r1
 2171 0a76 7B80     		strh	r3, [r7, #2]	@ movhi
1249:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ITStatus bitstatus = RESET;
 2172              		.loc 1 1249 0
 2173 0a78 4FF00003 		mov	r3, #0
 2174 0a7c FB75     		strb	r3, [r7, #23]
1250:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
 2175              		.loc 1 1250 0
 2176 0a7e 4FF00003 		mov	r3, #0
 2177 0a82 3B61     		str	r3, [r7, #16]
 2178 0a84 4FF00003 		mov	r3, #0
 2179 0a88 FB60     		str	r3, [r7, #12]
1251:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1252:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1253:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_GET_IT(ADC_IT));
1254:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1255:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = ADC_IT >> 8;
 2180              		.loc 1 1255 0
 2181 0a8a 7B88     		ldrh	r3, [r7, #2]
 2182 0a8c 4FEA1323 		lsr	r3, r3, #8
 2183 0a90 9BB2     		uxth	r3, r3
 2184 0a92 3B61     		str	r3, [r7, #16]
1256:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC_IT enable bit status */
1257:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   enablestatus = (ADCx->CR1 & (uint8_t)ADC_IT) ;
 2185              		.loc 1 1257 0
 2186 0a94 7B68     		ldr	r3, [r7, #4]
 2187 0a96 5A68     		ldr	r2, [r3, #4]
 2188 0a98 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2189 0a9a DBB2     		uxtb	r3, r3
 2190 0a9c 1340     		ands	r3, r3, r2
 2191 0a9e FB60     		str	r3, [r7, #12]
1258:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the status of the specified ADC interrupt */
1259:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 2192              		.loc 1 1259 0
 2193 0aa0 7B68     		ldr	r3, [r7, #4]
 2194 0aa2 1A68     		ldr	r2, [r3, #0]
 2195 0aa4 3B69     		ldr	r3, [r7, #16]
 2196 0aa6 1340     		ands	r3, r3, r2
 2197 0aa8 002B     		cmp	r3, #0
 2198 0aaa 06D0     		beq	.L94
 2199              		.loc 1 1259 0 is_stmt 0 discriminator 1
 2200 0aac FB68     		ldr	r3, [r7, #12]
 2201 0aae 002B     		cmp	r3, #0
 2202 0ab0 03D0     		beq	.L94
1260:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1261:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_IT is set */
1262:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = SET;
 2203              		.loc 1 1262 0 is_stmt 1
 2204 0ab2 4FF00103 		mov	r3, #1
 2205 0ab6 FB75     		strb	r3, [r7, #23]
 2206 0ab8 02E0     		b	.L95
 2207              	.L94:
1263:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1264:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   else
1265:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   {
1266:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     /* ADC_IT is reset */
1267:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****     bitstatus = RESET;
 2208              		.loc 1 1267 0
 2209 0aba 4FF00003 		mov	r3, #0
 2210 0abe FB75     		strb	r3, [r7, #23]
 2211              	.L95:
1268:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   }
1269:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Return the ADC_IT status */
1270:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   return  bitstatus;
 2212              		.loc 1 1270 0
 2213 0ac0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1271:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2214              		.loc 1 1271 0
 2215 0ac2 1846     		mov	r0, r3
 2216 0ac4 07F11C07 		add	r7, r7, #28
 2217 0ac8 BD46     		mov	sp, r7
 2218 0aca 80BC     		pop	{r7}
 2219 0acc 7047     		bx	lr
 2220              		.cfi_endproc
 2221              	.LFE63:
 2223 0ace 00BF     		.align	2
 2224              		.global	ADC_ClearITPendingBit
 2225              		.thumb
 2226              		.thumb_func
 2228              	ADC_ClearITPendingBit:
 2229              	.LFB64:
1272:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** 
1273:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** /**
1274:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1275:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1276:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1277:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *   This parameter can be any combination of the following values:
1278:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt mask
1279:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt mask
1280:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   *     @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1281:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   * @retval None
1282:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   */
1283:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1284:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** {
 2230              		.loc 1 1284 0
 2231              		.cfi_startproc
 2232              		@ args = 0, pretend = 0, frame = 16
 2233              		@ frame_needed = 1, uses_anonymous_args = 0
 2234              		@ link register save eliminated.
 2235 0ad0 80B4     		push	{r7}
 2236              	.LCFI104:
 2237              		.cfi_def_cfa_offset 4
 2238              		.cfi_offset 7, -4
 2239 0ad2 85B0     		sub	sp, sp, #20
 2240              	.LCFI105:
 2241              		.cfi_def_cfa_offset 24
 2242 0ad4 00AF     		add	r7, sp, #0
 2243              	.LCFI106:
 2244              		.cfi_def_cfa_register 7
 2245 0ad6 7860     		str	r0, [r7, #4]
 2246 0ad8 0B46     		mov	r3, r1
 2247 0ada 7B80     		strh	r3, [r7, #2]	@ movhi
1285:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   uint8_t itmask = 0;
 2248              		.loc 1 1285 0
 2249 0adc 4FF00003 		mov	r3, #0
 2250 0ae0 FB73     		strb	r3, [r7, #15]
1286:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Check the parameters */
1287:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1288:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
1289:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Get the ADC IT index */
1290:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
 2251              		.loc 1 1290 0
 2252 0ae2 7B88     		ldrh	r3, [r7, #2]
 2253 0ae4 4FEA1323 		lsr	r3, r3, #8
 2254 0ae8 9BB2     		uxth	r3, r3
 2255 0aea FB73     		strb	r3, [r7, #15]
1291:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1292:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 2256              		.loc 1 1292 0
 2257 0aec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2258 0aee 6FEA0302 		mvn	r2, r3
 2259 0af2 7B68     		ldr	r3, [r7, #4]
 2260 0af4 1A60     		str	r2, [r3, #0]
1293:../lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c **** }
 2261              		.loc 1 1293 0
 2262 0af6 07F11407 		add	r7, r7, #20
 2263 0afa BD46     		mov	sp, r7
 2264 0afc 80BC     		pop	{r7}
 2265 0afe 7047     		bx	lr
 2266              		.cfi_endproc
 2267              	.LFE64:
 2269              	.Letext0:
 2270              		.file 2 "/home/oni/ARM_EABI/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/s
 2271              		.file 3 "/home/oni/workspace/Naze32/lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 2272              		.file 4 "/home/oni/workspace/Naze32/lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_adc.h"
 2273              		.file 5 "/home/oni/workspace/Naze32/lib/CMSIS/CM3/CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_adc.c
     /tmp/ccbkmDx8.s:18     .text:00000000 $t
     /tmp/ccbkmDx8.s:23     .text:00000000 ADC_DeInit
     /tmp/ccbkmDx8.s:93     .text:00000074 $d
     /tmp/ccbkmDx8.s:99     .text:00000080 $t
     /tmp/ccbkmDx8.s:104    .text:00000080 ADC_Init
     /tmp/ccbkmDx8.s:214    .text:0000012c $d
     /tmp/ccbkmDx8.s:218    .text:00000130 $t
     /tmp/ccbkmDx8.s:223    .text:00000130 ADC_StructInit
     /tmp/ccbkmDx8.s:278    .text:00000174 ADC_Cmd
     /tmp/ccbkmDx8.s:330    .text:000001ac ADC_DMACmd
     /tmp/ccbkmDx8.s:382    .text:000001e4 ADC_ITConfig
     /tmp/ccbkmDx8.s:445    .text:0000022c ADC_ResetCalibration
     /tmp/ccbkmDx8.s:482    .text:0000024c ADC_GetResetCalibrationStatus
     /tmp/ccbkmDx8.s:534    .text:00000284 ADC_StartCalibration
     /tmp/ccbkmDx8.s:571    .text:000002a4 ADC_GetCalibrationStatus
     /tmp/ccbkmDx8.s:623    .text:000002dc ADC_SoftwareStartConvCmd
     /tmp/ccbkmDx8.s:675    .text:00000314 ADC_GetSoftwareStartConvStatus
     /tmp/ccbkmDx8.s:727    .text:0000034c ADC_DiscModeChannelCountConfig
     /tmp/ccbkmDx8.s:788    .text:00000398 ADC_DiscModeCmd
     /tmp/ccbkmDx8.s:840    .text:000003d0 ADC_RegularChannelConfig
     /tmp/ccbkmDx8.s:1082   .text:0000058c ADC_ExternalTrigConvCmd
     /tmp/ccbkmDx8.s:1134   .text:000005c4 ADC_GetConversionValue
     /tmp/ccbkmDx8.s:1170   .text:000005e0 ADC_GetDualModeConversionValue
     /tmp/ccbkmDx8.s:1195   .text:000005f0 $d
     /tmp/ccbkmDx8.s:1199   .text:000005f4 $t
     /tmp/ccbkmDx8.s:1204   .text:000005f4 ADC_AutoInjectedConvCmd
     /tmp/ccbkmDx8.s:1256   .text:0000062c ADC_InjectedDiscModeCmd
     /tmp/ccbkmDx8.s:1308   .text:00000664 ADC_ExternalTrigInjectedConvConfig
     /tmp/ccbkmDx8.s:1360   .text:0000069c ADC_ExternalTrigInjectedConvCmd
     /tmp/ccbkmDx8.s:1412   .text:000006d4 ADC_SoftwareStartInjectedConvCmd
     /tmp/ccbkmDx8.s:1464   .text:0000070c ADC_GetSoftwareStartInjectedConvCmdStatus
     /tmp/ccbkmDx8.s:1516   .text:00000744 ADC_InjectedChannelConfig
     /tmp/ccbkmDx8.s:1694   .text:00000888 ADC_InjectedSequencerLengthConfig
     /tmp/ccbkmDx8.s:1755   .text:000008d4 ADC_SetInjectedOffset
     /tmp/ccbkmDx8.s:1805   .text:00000908 ADC_GetInjectedConversionValue
     /tmp/ccbkmDx8.s:1855   .text:0000093c ADC_AnalogWatchdogCmd
     /tmp/ccbkmDx8.s:1908   .text:00000978 ADC_AnalogWatchdogThresholdsConfig
     /tmp/ccbkmDx8.s:1951   .text:000009a0 ADC_AnalogWatchdogSingleChannelConfig
     /tmp/ccbkmDx8.s:2004   .text:000009d8 ADC_TempSensorVrefintCmd
     /tmp/ccbkmDx8.s:2050   .text:00000a0c $d
     /tmp/ccbkmDx8.s:2054   .text:00000a10 $t
     /tmp/ccbkmDx8.s:2059   .text:00000a10 ADC_GetFlagStatus
     /tmp/ccbkmDx8.s:2114   .text:00000a4c ADC_ClearFlag
     /tmp/ccbkmDx8.s:2152   .text:00000a6c ADC_GetITStatus
     /tmp/ccbkmDx8.s:2228   .text:00000ad0 ADC_ClearITPendingBit
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.809c0ff785d6d6219236c5d51f444c16
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.522.9a9f642c8c562acb4a63ad5d933b7c01
                           .group:00000000 wm4.stm32f10x_bkp.h.58.6453665ad39dc78c618a75ac337c70d3
                           .group:00000000 wm4.stm32f10x_can.h.25.48aab46fcce6d08400bf960b028e4698
                           .group:00000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:00000000 wm4.stm32f10x_dac.h.25.6e7f2924f39c60c10815105b99b8b446
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:00000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:00000000 wm4.stm32f10x_exti.h.25.b9064155c5c006b5154b39788c79001a
                           .group:00000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:00000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_i2c.h.25.7b6cbaea24c6f25f538f8516d1814cb2
                           .group:00000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:00000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:00000000 wm4.stm32f10x_rcc.h.25.968bcf08d813e68e57c280a4da69fa5a
                           .group:00000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:00000000 wm4.stm32f10x_sdio.h.25.1fb5280a7690ef99070096bf8c866b3a
                           .group:00000000 wm4.stm32f10x_spi.h.25.68b3d5ccfcf895f9fe505ce20c0c300f
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_adc.h.83.4d35a50d598070ecea6f33bcef02c922

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
