   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"spektrum.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              	spek_chan_shift:
  20 0000 00       		.space	1
  21              	spek_chan_mask:
  22 0001 00       		.space	1
  23              	rcFrameComplete:
  24 0002 00       		.space	1
  25              	spekDataIncoming:
  26 0003 00       		.space	1
  27              		.comm	spekFrame,16,4
  28              		.text
  29              		.align	2
  30              		.global	spektrumInit
  31              		.thumb
  32              		.thumb_func
  34              	spektrumInit:
  35              	.LFB29:
  36              		.file 1 "../src/spektrum.c"
   1:../src/spektrum.c **** #include "board.h"
   2:../src/spektrum.c **** #include "mw.h"
   3:../src/spektrum.c **** 
   4:../src/spektrum.c **** // driver for spektrum satellite receiver / sbus using UART2 (freeing up more motor outputs for stu
   5:../src/spektrum.c **** 
   6:../src/spektrum.c **** #define SPEK_MAX_CHANNEL 7
   7:../src/spektrum.c **** #define SPEK_FRAME_SIZE 16
   8:../src/spektrum.c **** static uint8_t spek_chan_shift;
   9:../src/spektrum.c **** static uint8_t spek_chan_mask;
  10:../src/spektrum.c **** static bool rcFrameComplete = false;
  11:../src/spektrum.c **** static bool spekDataIncoming = false;
  12:../src/spektrum.c **** volatile uint8_t spekFrame[SPEK_FRAME_SIZE];
  13:../src/spektrum.c **** static void spektrumDataReceive(uint16_t c);
  14:../src/spektrum.c **** 
  15:../src/spektrum.c **** // external vars (ugh)
  16:../src/spektrum.c **** extern int16_t failsafeCnt;
  17:../src/spektrum.c **** 
  18:../src/spektrum.c **** void spektrumInit(void)
  19:../src/spektrum.c **** {
  37              		.loc 1 19 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              	.LCFI1:
  48              		.cfi_def_cfa_register 7
  20:../src/spektrum.c ****     if (mcfg.spektrum_hires) {
  49              		.loc 1 20 0
  50 0004 0E4B     		ldr	r3, .L4
  51 0006 93F80631 		ldrb	r3, [r3, #262]	@ zero_extendqisi2
  52 000a 002B     		cmp	r3, #0
  53 000c 08D0     		beq	.L2
  21:../src/spektrum.c ****         // 11 bit frames
  22:../src/spektrum.c ****         spek_chan_shift = 3;
  54              		.loc 1 22 0
  55 000e 0D4B     		ldr	r3, .L4+4
  56 0010 4FF00302 		mov	r2, #3
  57 0014 1A70     		strb	r2, [r3, #0]
  23:../src/spektrum.c ****         spek_chan_mask = 0x07;
  58              		.loc 1 23 0
  59 0016 0C4B     		ldr	r3, .L4+8
  60 0018 4FF00702 		mov	r2, #7
  61 001c 1A70     		strb	r2, [r3, #0]
  62 001e 07E0     		b	.L3
  63              	.L2:
  24:../src/spektrum.c ****     } else {
  25:../src/spektrum.c ****         // 10 bit frames
  26:../src/spektrum.c ****         spek_chan_shift = 2;
  64              		.loc 1 26 0
  65 0020 084B     		ldr	r3, .L4+4
  66 0022 4FF00202 		mov	r2, #2
  67 0026 1A70     		strb	r2, [r3, #0]
  27:../src/spektrum.c ****         spek_chan_mask = 0x03;
  68              		.loc 1 27 0
  69 0028 074B     		ldr	r3, .L4+8
  70 002a 4FF00302 		mov	r2, #3
  71 002e 1A70     		strb	r2, [r3, #0]
  72              	.L3:
  28:../src/spektrum.c ****     }
  29:../src/spektrum.c **** 
  30:../src/spektrum.c ****     uart2Init(115200, spektrumDataReceive, true);
  73              		.loc 1 30 0
  74 0030 4FF4E130 		mov	r0, #115200
  75 0034 0549     		ldr	r1, .L4+12
  76 0036 4FF00102 		mov	r2, #1
  77 003a FFF7FEFF 		bl	uart2Init
  31:../src/spektrum.c **** }
  78              		.loc 1 31 0
  79 003e 80BD     		pop	{r7, pc}
  80              	.L5:
  81              		.align	2
  82              	.L4:
  83 0040 00000000 		.word	mcfg
  84 0044 00000000 		.word	spek_chan_shift
  85 0048 01000000 		.word	spek_chan_mask
  86 004c 00000000 		.word	spektrumDataReceive
  87              		.cfi_endproc
  88              	.LFE29:
  90              		.align	2
  91              		.thumb
  92              		.thumb_func
  94              	spektrumDataReceive:
  95              	.LFB30:
  32:../src/spektrum.c **** 
  33:../src/spektrum.c **** // UART2 Receive ISR callback
  34:../src/spektrum.c **** static void spektrumDataReceive(uint16_t c)
  35:../src/spektrum.c **** {
  96              		.loc 1 35 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 16
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100 0050 80B5     		push	{r7, lr}
 101              	.LCFI2:
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 7, -8
 104              		.cfi_offset 14, -4
 105 0052 84B0     		sub	sp, sp, #16
 106              	.LCFI3:
 107              		.cfi_def_cfa_offset 24
 108 0054 00AF     		add	r7, sp, #0
 109              	.LCFI4:
 110              		.cfi_def_cfa_register 7
 111 0056 0346     		mov	r3, r0
 112 0058 FB80     		strh	r3, [r7, #6]	@ movhi
  36:../src/spektrum.c ****     uint32_t spekTime;
  37:../src/spektrum.c ****     static uint32_t spekTimeLast, spekTimeInterval;
  38:../src/spektrum.c ****     static uint8_t  spekFramePosition;
  39:../src/spektrum.c **** 
  40:../src/spektrum.c ****     spekDataIncoming = true;
 113              		.loc 1 40 0
 114 005a 1C4B     		ldr	r3, .L10
 115 005c 4FF00102 		mov	r2, #1
 116 0060 1A70     		strb	r2, [r3, #0]
  41:../src/spektrum.c ****     spekTime = micros();
 117              		.loc 1 41 0
 118 0062 FFF7FEFF 		bl	micros
 119 0066 F860     		str	r0, [r7, #12]
  42:../src/spektrum.c ****     spekTimeInterval = spekTime - spekTimeLast;
 120              		.loc 1 42 0
 121 0068 194B     		ldr	r3, .L10+4
 122 006a 1B68     		ldr	r3, [r3, #0]
 123 006c FA68     		ldr	r2, [r7, #12]
 124 006e D21A     		subs	r2, r2, r3
 125 0070 184B     		ldr	r3, .L10+8
 126 0072 1A60     		str	r2, [r3, #0]
  43:../src/spektrum.c ****     spekTimeLast = spekTime;
 127              		.loc 1 43 0
 128 0074 164B     		ldr	r3, .L10+4
 129 0076 FA68     		ldr	r2, [r7, #12]
 130 0078 1A60     		str	r2, [r3, #0]
  44:../src/spektrum.c ****     if (spekTimeInterval > 5000) 
 131              		.loc 1 44 0
 132 007a 164B     		ldr	r3, .L10+8
 133 007c 1A68     		ldr	r2, [r3, #0]
 134 007e 41F28833 		movw	r3, #5000
 135 0082 9A42     		cmp	r2, r3
 136 0084 03D9     		bls	.L7
  45:../src/spektrum.c ****         spekFramePosition = 0;
 137              		.loc 1 45 0
 138 0086 144B     		ldr	r3, .L10+12
 139 0088 4FF00002 		mov	r2, #0
 140 008c 1A70     		strb	r2, [r3, #0]
 141              	.L7:
  46:../src/spektrum.c ****     spekFrame[spekFramePosition] = (uint8_t)c;
 142              		.loc 1 46 0
 143 008e 124B     		ldr	r3, .L10+12
 144 0090 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 145 0092 FA88     		ldrh	r2, [r7, #6]	@ movhi
 146 0094 D1B2     		uxtb	r1, r2
 147 0096 114A     		ldr	r2, .L10+16
 148 0098 D154     		strb	r1, [r2, r3]
  47:../src/spektrum.c ****     if (spekFramePosition == SPEK_FRAME_SIZE - 1) {
 149              		.loc 1 47 0
 150 009a 0F4B     		ldr	r3, .L10+12
 151 009c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 152 009e 0F2B     		cmp	r3, #15
 153 00a0 08D1     		bne	.L8
  48:../src/spektrum.c ****         rcFrameComplete = true;
 154              		.loc 1 48 0
 155 00a2 0F4B     		ldr	r3, .L10+20
 156 00a4 4FF00102 		mov	r2, #1
 157 00a8 1A70     		strb	r2, [r3, #0]
  49:../src/spektrum.c ****         failsafeCnt = 0;   // clear FailSafe counter
 158              		.loc 1 49 0
 159 00aa 0E4B     		ldr	r3, .L10+24
 160 00ac 4FF00002 		mov	r2, #0
 161 00b0 1A80     		strh	r2, [r3, #0]	@ movhi
 162 00b2 06E0     		b	.L6
 163              	.L8:
  50:../src/spektrum.c ****     } else {
  51:../src/spektrum.c ****         spekFramePosition++;
 164              		.loc 1 51 0
 165 00b4 084B     		ldr	r3, .L10+12
 166 00b6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 167 00b8 03F10103 		add	r3, r3, #1
 168 00bc DAB2     		uxtb	r2, r3
 169 00be 064B     		ldr	r3, .L10+12
 170 00c0 1A70     		strb	r2, [r3, #0]
 171              	.L6:
  52:../src/spektrum.c ****     }
  53:../src/spektrum.c **** }
 172              		.loc 1 53 0
 173 00c2 07F11007 		add	r7, r7, #16
 174 00c6 BD46     		mov	sp, r7
 175 00c8 80BD     		pop	{r7, pc}
 176              	.L11:
 177 00ca 00BF     		.align	2
 178              	.L10:
 179 00cc 03000000 		.word	spekDataIncoming
 180 00d0 20000000 		.word	spekTimeLast.9042
 181 00d4 24000000 		.word	spekTimeInterval.9043
 182 00d8 28000000 		.word	spekFramePosition.9044
 183 00dc 00000000 		.word	spekFrame
 184 00e0 02000000 		.word	rcFrameComplete
 185 00e4 00000000 		.word	failsafeCnt
 186              		.cfi_endproc
 187              	.LFE30:
 189              		.align	2
 190              		.global	spektrumFrameComplete
 191              		.thumb
 192              		.thumb_func
 194              	spektrumFrameComplete:
 195              	.LFB31:
  54:../src/spektrum.c **** 
  55:../src/spektrum.c **** bool spektrumFrameComplete(void)
  56:../src/spektrum.c **** {
 196              		.loc 1 56 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201 00e8 80B4     		push	{r7}
 202              	.LCFI5:
 203              		.cfi_def_cfa_offset 4
 204              		.cfi_offset 7, -4
 205 00ea 00AF     		add	r7, sp, #0
 206              	.LCFI6:
 207              		.cfi_def_cfa_register 7
  57:../src/spektrum.c ****     return rcFrameComplete;
 208              		.loc 1 57 0
 209 00ec 024B     		ldr	r3, .L14
 210 00ee 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  58:../src/spektrum.c **** }
 211              		.loc 1 58 0
 212 00f0 1846     		mov	r0, r3
 213 00f2 BD46     		mov	sp, r7
 214 00f4 80BC     		pop	{r7}
 215 00f6 7047     		bx	lr
 216              	.L15:
 217              		.align	2
 218              	.L14:
 219 00f8 02000000 		.word	rcFrameComplete
 220              		.cfi_endproc
 221              	.LFE31:
 223              		.align	2
 224              		.global	spektrumReadRawRC
 225              		.thumb
 226              		.thumb_func
 228              	spektrumReadRawRC:
 229              	.LFB32:
  59:../src/spektrum.c **** 
  60:../src/spektrum.c **** // static const uint8_t spekRcChannelMap[SPEK_MAX_CHANNEL] = {1, 2, 3, 0, 4, 5, 6};
  61:../src/spektrum.c **** 
  62:../src/spektrum.c **** uint16_t spektrumReadRawRC(uint8_t chan)
  63:../src/spektrum.c **** {
 230              		.loc 1 63 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 16
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235 00fc 80B4     		push	{r7}
 236              	.LCFI7:
 237              		.cfi_def_cfa_offset 4
 238              		.cfi_offset 7, -4
 239 00fe 85B0     		sub	sp, sp, #20
 240              	.LCFI8:
 241              		.cfi_def_cfa_offset 24
 242 0100 00AF     		add	r7, sp, #0
 243              	.LCFI9:
 244              		.cfi_def_cfa_register 7
 245 0102 0346     		mov	r3, r0
 246 0104 FB71     		strb	r3, [r7, #7]
  64:../src/spektrum.c ****     uint16_t data;
  65:../src/spektrum.c ****     static uint32_t spekChannelData[SPEK_MAX_CHANNEL];
  66:../src/spektrum.c ****     uint8_t b;
  67:../src/spektrum.c **** 
  68:../src/spektrum.c ****     if (rcFrameComplete) {
 247              		.loc 1 68 0
 248 0106 394B     		ldr	r3, .L26
 249 0108 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 250 010a 002B     		cmp	r3, #0
 251 010c 35D0     		beq	.L17
  69:../src/spektrum.c ****         for (b = 3; b < SPEK_FRAME_SIZE; b += 2) {
 252              		.loc 1 69 0
 253 010e 4FF00303 		mov	r3, #3
 254 0112 7B73     		strb	r3, [r7, #13]
 255 0114 2AE0     		b	.L18
 256              	.L20:
 257              	.LBB2:
  70:../src/spektrum.c ****             uint8_t spekChannel = 0x0F & (spekFrame[b - 1] >> spek_chan_shift);
 258              		.loc 1 70 0
 259 0116 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 260 0118 03F1FF33 		add	r3, r3, #-1
 261 011c 344A     		ldr	r2, .L26+4
 262 011e D35C     		ldrb	r3, [r2, r3]
 263 0120 DBB2     		uxtb	r3, r3
 264 0122 1A46     		mov	r2, r3
 265 0124 334B     		ldr	r3, .L26+8
 266 0126 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 267 0128 42FA03F3 		asr	r3, r2, r3
 268 012c DBB2     		uxtb	r3, r3
 269 012e 03F00F03 		and	r3, r3, #15
 270 0132 3B73     		strb	r3, [r7, #12]
  71:../src/spektrum.c ****             if (spekChannel < SPEK_MAX_CHANNEL) 
 271              		.loc 1 71 0
 272 0134 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 273 0136 062B     		cmp	r3, #6
 274 0138 14D8     		bhi	.L19
  72:../src/spektrum.c ****                 spekChannelData[spekChannel] = ((uint32_t)(spekFrame[b - 1] & spek_chan_mask) << 8)
 275              		.loc 1 72 0
 276 013a 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 277 013c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 278 013e 03F1FF33 		add	r3, r3, #-1
 279 0142 2B49     		ldr	r1, .L26+4
 280 0144 CB5C     		ldrb	r3, [r1, r3]
 281 0146 D9B2     		uxtb	r1, r3
 282 0148 2B4B     		ldr	r3, .L26+12
 283 014a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 284 014c 0B40     		ands	r3, r3, r1
 285 014e DBB2     		uxtb	r3, r3
 286 0150 4FEA0321 		lsl	r1, r3, #8
 287 0154 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 288 0156 2648     		ldr	r0, .L26+4
 289 0158 C35C     		ldrb	r3, [r0, r3]
 290 015a DBB2     		uxtb	r3, r3
 291 015c C918     		adds	r1, r1, r3
 292 015e 274B     		ldr	r3, .L26+16
 293 0160 43F82210 		str	r1, [r3, r2, lsl #2]
 294              	.L19:
 295              	.LBE2:
  69:../src/spektrum.c ****         for (b = 3; b < SPEK_FRAME_SIZE; b += 2) {
 296              		.loc 1 69 0
 297 0164 7B7B     		ldrb	r3, [r7, #13]
 298 0166 03F10203 		add	r3, r3, #2
 299 016a 7B73     		strb	r3, [r7, #13]
 300              	.L18:
  69:../src/spektrum.c ****         for (b = 3; b < SPEK_FRAME_SIZE; b += 2) {
 301              		.loc 1 69 0 is_stmt 0 discriminator 1
 302 016c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 303 016e 0F2B     		cmp	r3, #15
 304 0170 D1D9     		bls	.L20
  73:../src/spektrum.c ****         }
  74:../src/spektrum.c ****         rcFrameComplete = false;
 305              		.loc 1 74 0 is_stmt 1
 306 0172 1E4B     		ldr	r3, .L26
 307 0174 4FF00002 		mov	r2, #0
 308 0178 1A70     		strb	r2, [r3, #0]
 309              	.L17:
  75:../src/spektrum.c ****     }
  76:../src/spektrum.c **** 
  77:../src/spektrum.c ****     if (chan >= SPEK_MAX_CHANNEL || !spekDataIncoming) {
 310              		.loc 1 77 0
 311 017a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 312 017c 062B     		cmp	r3, #6
 313 017e 06D8     		bhi	.L21
 314              		.loc 1 77 0 is_stmt 0 discriminator 1
 315 0180 1F4B     		ldr	r3, .L26+20
 316 0182 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 317 0184 83F00103 		eor	r3, r3, #1
 318 0188 DBB2     		uxtb	r3, r3
 319 018a 002B     		cmp	r3, #0
 320 018c 04D0     		beq	.L22
 321              	.L21:
  78:../src/spektrum.c ****         data = mcfg.midrc;
 322              		.loc 1 78 0 is_stmt 1
 323 018e 1D4B     		ldr	r3, .L26+24
 324 0190 B3F80831 		ldrh	r3, [r3, #264]	@ movhi
 325 0194 FB81     		strh	r3, [r7, #14]	@ movhi
 326 0196 21E0     		b	.L23
 327              	.L22:
  79:../src/spektrum.c ****     } else {
  80:../src/spektrum.c ****         if (mcfg.spektrum_hires)
 328              		.loc 1 80 0
 329 0198 1A4B     		ldr	r3, .L26+24
 330 019a 93F80631 		ldrb	r3, [r3, #262]	@ zero_extendqisi2
 331 019e 002B     		cmp	r3, #0
 332 01a0 0FD0     		beq	.L24
  81:../src/spektrum.c ****             data = 988 + (spekChannelData[mcfg.rcmap[chan]] >> 1);   // 2048 mode
 333              		.loc 1 81 0
 334 01a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 335 01a4 174A     		ldr	r2, .L26+24
 336 01a6 D318     		adds	r3, r2, r3
 337 01a8 93F8FE30 		ldrb	r3, [r3, #254]	@ zero_extendqisi2
 338 01ac 1A46     		mov	r2, r3
 339 01ae 134B     		ldr	r3, .L26+16
 340 01b0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 341 01b4 4FEA5303 		lsr	r3, r3, #1
 342 01b8 9BB2     		uxth	r3, r3
 343 01ba 03F57773 		add	r3, r3, #988
 344 01be FB81     		strh	r3, [r7, #14]	@ movhi
 345 01c0 0CE0     		b	.L23
 346              	.L24:
  82:../src/spektrum.c ****         else
  83:../src/spektrum.c ****             data = 988 + spekChannelData[mcfg.rcmap[chan]];          // 1024 mode
 347              		.loc 1 83 0
 348 01c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 349 01c4 0F4A     		ldr	r2, .L26+24
 350 01c6 D318     		adds	r3, r2, r3
 351 01c8 93F8FE30 		ldrb	r3, [r3, #254]	@ zero_extendqisi2
 352 01cc 1A46     		mov	r2, r3
 353 01ce 0B4B     		ldr	r3, .L26+16
 354 01d0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 355 01d4 9BB2     		uxth	r3, r3
 356 01d6 03F57773 		add	r3, r3, #988
 357 01da FB81     		strh	r3, [r7, #14]	@ movhi
 358              	.L23:
  84:../src/spektrum.c ****     }
  85:../src/spektrum.c ****     
  86:../src/spektrum.c ****     return data;
 359              		.loc 1 86 0
 360 01dc FB89     		ldrh	r3, [r7, #14]
  87:../src/spektrum.c **** }
 361              		.loc 1 87 0
 362 01de 1846     		mov	r0, r3
 363 01e0 07F11407 		add	r7, r7, #20
 364 01e4 BD46     		mov	sp, r7
 365 01e6 80BC     		pop	{r7}
 366 01e8 7047     		bx	lr
 367              	.L27:
 368 01ea 00BF     		.align	2
 369              	.L26:
 370 01ec 02000000 		.word	rcFrameComplete
 371 01f0 00000000 		.word	spekFrame
 372 01f4 00000000 		.word	spek_chan_shift
 373 01f8 01000000 		.word	spek_chan_mask
 374 01fc 04000000 		.word	spekChannelData.9052
 375 0200 03000000 		.word	spekDataIncoming
 376 0204 00000000 		.word	mcfg
 377              		.cfi_endproc
 378              	.LFE32:
 380              		.bss
 381              		.align	2
 382              	spekChannelData.9052:
 383 0004 00000000 		.space	28
 383      00000000 
 383      00000000 
 383      00000000 
 383      00000000 
 384              		.align	2
 385              	spekTimeLast.9042:
 386 0020 00000000 		.space	4
 387              		.align	2
 388              	spekTimeInterval.9043:
 389 0024 00000000 		.space	4
 390              	spekFramePosition.9044:
 391 0028 00       		.space	1
 392 0029 000000   		.text
 393              	.Letext0:
 394              		.file 2 "/home/oni/ARM_EABI/bin/../lib/gcc/arm-none-eabi/4.7.2/../../../../arm-none-eabi/include/s
 395              		.file 3 "../src/mw.h"
 396              		.file 4 "/home/oni/workspace/Naze32/lib/CMSIS/CM3/CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 spektrum.c
     /tmp/ccOPMhoE.s:19     .bss:00000000 spek_chan_shift
     /tmp/ccOPMhoE.s:20     .bss:00000000 $d
     /tmp/ccOPMhoE.s:21     .bss:00000001 spek_chan_mask
     /tmp/ccOPMhoE.s:23     .bss:00000002 rcFrameComplete
     /tmp/ccOPMhoE.s:25     .bss:00000003 spekDataIncoming
                            *COM*:00000010 spekFrame
     /tmp/ccOPMhoE.s:29     .text:00000000 $t
     /tmp/ccOPMhoE.s:34     .text:00000000 spektrumInit
     /tmp/ccOPMhoE.s:83     .text:00000040 $d
     /tmp/ccOPMhoE.s:94     .text:00000050 spektrumDataReceive
     /tmp/ccOPMhoE.s:90     .text:00000050 $t
     /tmp/ccOPMhoE.s:179    .text:000000cc $d
     /tmp/ccOPMhoE.s:385    .bss:00000020 spekTimeLast.9042
     /tmp/ccOPMhoE.s:388    .bss:00000024 spekTimeInterval.9043
     /tmp/ccOPMhoE.s:390    .bss:00000028 spekFramePosition.9044
     /tmp/ccOPMhoE.s:189    .text:000000e8 $t
     /tmp/ccOPMhoE.s:194    .text:000000e8 spektrumFrameComplete
     /tmp/ccOPMhoE.s:219    .text:000000f8 $d
     /tmp/ccOPMhoE.s:223    .text:000000fc $t
     /tmp/ccOPMhoE.s:228    .text:000000fc spektrumReadRawRC
     /tmp/ccOPMhoE.s:370    .text:000001ec $d
     /tmp/ccOPMhoE.s:382    .bss:00000004 spekChannelData.9052
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.809c0ff785d6d6219236c5d51f444c16
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.e1d498e57c12962fc6d7be5061a6981a
                           .group:00000000 wm4.config.h.148.52fe83653334d06815a0c57b59a3e584
                           .group:00000000 wm4._ansi.h.23.95dee4059009fe3ab635a191bb73dc66
                           .group:00000000 wm4.stdlib.h.18.6f6153fd5cb89acd58c0f0ab1f77e147
                           .group:00000000 wm4.stddef.h.187.40b3a084f9bc2c020a9e00b9eabe9c14
                           .group:00000000 wm4._default_types.h.6.1dbd2e581fd590860c7c17f21d147e91
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.58b23a9f0faf0e7f2dfe7e2d33154afd
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.55.22eafe60f8565d898cbb44515781114b
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.math.h.49.5da716593b937b9fb02bef6ed6537c13
                           .group:00000000 wm4.ctype.h.2.fecd14bb6f4e162ef31748cc97760e21
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.stddef.h.235.d9f4f80b8c4429535175712282cda6a6
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c
                           .group:00000000 wm4.stdio.h.27.f2ac352bab34f31f9f478442827b2ba6
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.stddef.h.40.b60a1c1ee3f272eef5327a730cbabca6
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.f2bfdfeee9f340633702c07fad9b5e01
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.1f4bc553faa62c5c69dd9cb47f9f1417
                           .group:00000000 wm4.stm32f10x.h.51.b859cb68ed44ee02c916b41cb8c68f1c
                           .group:00000000 wm4.core_cm3.h.25.119fe996be41b62fbd915b59177e39d1
                           .group:00000000 wm4.stm32f10x.h.522.9a9f642c8c562acb4a63ad5d933b7c01
                           .group:00000000 wm4.stm32f10x.h.8304.f7d8ad90959e99679b3257267c3aadfe
                           .group:00000000 wm4.stm32f10x_adc.h.83.4d35a50d598070ecea6f33bcef02c922
                           .group:00000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:00000000 wm4.stm32f10x_can.h.25.48aab46fcce6d08400bf960b028e4698
                           .group:00000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:00000000 wm4.stm32f10x_dac.h.25.6e7f2924f39c60c10815105b99b8b446
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:00000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:00000000 wm4.stm32f10x_exti.h.25.b9064155c5c006b5154b39788c79001a
                           .group:00000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:00000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_i2c.h.25.7b6cbaea24c6f25f538f8516d1814cb2
                           .group:00000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:00000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:00000000 wm4.stm32f10x_rcc.h.25.968bcf08d813e68e57c280a4da69fa5a
                           .group:00000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:00000000 wm4.stm32f10x_sdio.h.25.1fb5280a7690ef99070096bf8c866b3a
                           .group:00000000 wm4.stm32f10x_spi.h.25.68b3d5ccfcf895f9fe505ce20c0c300f
                           .group:00000000 wm4.stm32f10x_tim.h.25.21c6ec062f1e74898cb96a57da276fec
                           .group:00000000 wm4.stm32f10x_usart.h.25.29629c699b65db3f3efd3561f66b0bf6
                           .group:00000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stdarg.h.31.fa591a4b1df9e413e9f5b8097f9ae89d
                           .group:00000000 wm4.printf.h.118.ab3672ee221610a07496c11f46394049
                           .group:00000000 wm4.board.h.22.3e17243136ce51e89ad1cec38a12dc6f
                           .group:00000000 wm4.drv_adc.h.3.0c1a2a90f0739aca31cc38e66ffab3f5
                           .group:00000000 wm4.drv_pwm.h.3.1f878ba1925c00079825df97e09db15d
                           .group:00000000 wm4.mw.h.4.b0e233e0e6ae9c4c07b142ad41413d4c

UNDEFINED SYMBOLS
uart2Init
mcfg
micros
failsafeCnt
